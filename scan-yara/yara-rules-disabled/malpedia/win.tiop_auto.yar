rule win_tiop_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.tiop."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tiop"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 81ec08010000 55 56 57 b940000000 33c0 8d7c2411 }
            // n = 7, score = 100
            //   81ec08010000         | sub                 esp, 0x108
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   8d7c2411             | lea                 edi, [esp + 0x11]

        $sequence_1 = { ff15???????? 50 ff15???????? 8b3d???????? 8bf0 ffd7 50 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   ffd7                 | call                edi
            //   50                   | push                eax

        $sequence_2 = { 57 33ed b94f000000 33c0 8d7c240c 896c2408 892d???????? }
            // n = 7, score = 100
            //   57                   | push                edi
            //   33ed                 | xor                 ebp, ebp
            //   b94f000000           | mov                 ecx, 0x4f
            //   33c0                 | xor                 eax, eax
            //   8d7c240c             | lea                 edi, [esp + 0xc]
            //   896c2408             | mov                 dword ptr [esp + 8], ebp
            //   892d????????         |                     

        $sequence_3 = { ff15???????? 50 8b44241c 53 50 ff5510 8b4c241c }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   50                   | push                eax
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   ff5510               | call                dword ptr [ebp + 0x10]
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]

        $sequence_4 = { 8b7c2410 56 8b35???????? 894704 ffd6 55 ffd6 }
            // n = 7, score = 100
            //   8b7c2410             | mov                 edi, dword ptr [esp + 0x10]
            //   56                   | push                esi
            //   8b35????????         |                     
            //   894704               | mov                 dword ptr [edi + 4], eax
            //   ffd6                 | call                esi
            //   55                   | push                ebp
            //   ffd6                 | call                esi

        $sequence_5 = { f3a4 8b442414 8b7500 8b4c2410 2bf0 03d0 897500 }
            // n = 7, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   8b7500               | mov                 esi, dword ptr [ebp]
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   2bf0                 | sub                 esi, eax
            //   03d0                 | add                 edx, eax
            //   897500               | mov                 dword ptr [ebp], esi

        $sequence_6 = { eb2e 50 ffd3 8d7c0002 8bc7 83c003 24fc }
            // n = 7, score = 100
            //   eb2e                 | jmp                 0x30
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   8d7c0002             | lea                 edi, [eax + eax + 2]
            //   8bc7                 | mov                 eax, edi
            //   83c003               | add                 eax, 3
            //   24fc                 | and                 al, 0xfc

        $sequence_7 = { 6a01 6a00 ffd7 8b1d???????? 8bf0 56 89742410 }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   ffd7                 | call                edi
            //   8b1d????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   89742410             | mov                 dword ptr [esp + 0x10], esi

        $sequence_8 = { 83c9ff 33c0 83c404 f2ae f7d1 6a10 49 }
            // n = 7, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   83c404               | add                 esp, 4
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   6a10                 | push                0x10
            //   49                   | dec                 ecx

        $sequence_9 = { 8b542418 8b4c2420 8b3d???????? 8944240c 8b44242c 89542408 8b542424 }
            // n = 7, score = 100
            //   8b542418             | mov                 edx, dword ptr [esp + 0x18]
            //   8b4c2420             | mov                 ecx, dword ptr [esp + 0x20]
            //   8b3d????????         |                     
            //   8944240c             | mov                 dword ptr [esp + 0xc], eax
            //   8b44242c             | mov                 eax, dword ptr [esp + 0x2c]
            //   89542408             | mov                 dword ptr [esp + 8], edx
            //   8b542424             | mov                 edx, dword ptr [esp + 0x24]

    condition:
        7 of them and filesize < 712704
}