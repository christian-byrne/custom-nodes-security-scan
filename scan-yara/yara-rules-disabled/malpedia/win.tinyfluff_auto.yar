rule win_tinyfluff_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.tinyfluff."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tinyfluff"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f84982c0000 c3 833d????????ff 7503 33c0 c3 53 }
            // n = 7, score = 200
            //   0f84982c0000         | je                  0x2c9e
            //   c3                   | ret                 
            //   833d????????ff       |                     
            //   7503                 | jne                 5
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   53                   | push                ebx

        $sequence_1 = { 8b04bd50704100 03c1 885c302e 46 3bf2 }
            // n = 5, score = 200
            //   8b04bd50704100       | mov                 eax, dword ptr [edi*4 + 0x417050]
            //   03c1                 | add                 eax, ecx
            //   885c302e             | mov                 byte ptr [eax + esi + 0x2e], bl
            //   46                   | inc                 esi
            //   3bf2                 | cmp                 esi, edx

        $sequence_2 = { 83e03f c1f906 6bc038 03048d50704100 }
            // n = 4, score = 200
            //   83e03f               | and                 eax, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bc038               | imul                eax, eax, 0x38
            //   03048d50704100       | add                 eax, dword ptr [ecx*4 + 0x417050]

        $sequence_3 = { 85c0 7418 8b858cfbffff 85c0 7407 50 }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   7418                 | je                  0x1a
            //   8b858cfbffff         | mov                 eax, dword ptr [ebp - 0x474]
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   50                   | push                eax

        $sequence_4 = { ff15???????? 33f6 e9???????? 8d8de0fbffff 8d5102 668b01 83c102 }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   33f6                 | xor                 esi, esi
            //   e9????????           |                     
            //   8d8de0fbffff         | lea                 ecx, [ebp - 0x420]
            //   8d5102               | lea                 edx, [ecx + 2]
            //   668b01               | mov                 ax, word ptr [ecx]
            //   83c102               | add                 ecx, 2

        $sequence_5 = { 8b049550704100 57 8b7d10 897d98 8955b4 }
            // n = 5, score = 200
            //   8b049550704100       | mov                 eax, dword ptr [edx*4 + 0x417050]
            //   57                   | push                edi
            //   8b7d10               | mov                 edi, dword ptr [ebp + 0x10]
            //   897d98               | mov                 dword ptr [ebp - 0x68], edi
            //   8955b4               | mov                 dword ptr [ebp - 0x4c], edx

        $sequence_6 = { 83c410 ebe6 8b45f0 8b0c8550704100 8b45f8 807c012800 }
            // n = 6, score = 200
            //   83c410               | add                 esp, 0x10
            //   ebe6                 | jmp                 0xffffffe8
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b0c8550704100       | mov                 ecx, dword ptr [eax*4 + 0x417050]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   807c012800           | cmp                 byte ptr [ecx + eax + 0x28], 0

        $sequence_7 = { 50 6af6 ff15???????? 8b04bd50704100 834c0318ff 33c0 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   6af6                 | push                -0xa
            //   ff15????????         |                     
            //   8b04bd50704100       | mov                 eax, dword ptr [edi*4 + 0x417050]
            //   834c0318ff           | or                  dword ptr [ebx + eax + 0x18], 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 56 57 83781408 8bf9 8bf2 897dfc 8bd0 }
            // n = 7, score = 200
            //   56                   | push                esi
            //   57                   | push                edi
            //   83781408             | cmp                 dword ptr [eax + 0x14], 8
            //   8bf9                 | mov                 edi, ecx
            //   8bf2                 | mov                 esi, edx
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   8bd0                 | mov                 edx, eax

        $sequence_9 = { c1fa06 8934b8 8bc7 83e03f 6bc838 8b049550704100 8b440818 }
            // n = 7, score = 200
            //   c1fa06               | sar                 edx, 6
            //   8934b8               | mov                 dword ptr [eax + edi*4], esi
            //   8bc7                 | mov                 eax, edi
            //   83e03f               | and                 eax, 0x3f
            //   6bc838               | imul                ecx, eax, 0x38
            //   8b049550704100       | mov                 eax, dword ptr [edx*4 + 0x417050]
            //   8b440818             | mov                 eax, dword ptr [eax + ecx + 0x18]

    condition:
        7 of them and filesize < 245760
}