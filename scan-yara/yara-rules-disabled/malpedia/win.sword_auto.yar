rule win_sword_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.sword."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sword"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f7d1 2bf9 8d942484020000 8bf7 8bfa }
            // n = 5, score = 100
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8d942484020000       | lea                 edx, [esp + 0x284]
            //   8bf7                 | mov                 esi, edi
            //   8bfa                 | mov                 edi, edx

        $sequence_1 = { ff15???????? 8b8c2434000100 50 8b84243c000100 8d542424 }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   8b8c2434000100       | mov                 ecx, dword ptr [esp + 0x10034]
            //   50                   | push                eax
            //   8b84243c000100       | mov                 eax, dword ptr [esp + 0x1003c]
            //   8d542424             | lea                 edx, [esp + 0x24]

        $sequence_2 = { 50 8d54241c 51 52 ff15???????? 85c0 0f8488090000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d54241c             | lea                 edx, [esp + 0x1c]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8488090000         | je                  0x98e

        $sequence_3 = { 49 885c29ff 807d0022 7520 8d7d01 }
            // n = 5, score = 100
            //   49                   | dec                 ecx
            //   885c29ff             | mov                 byte ptr [ecx + ebp - 1], bl
            //   807d0022             | cmp                 byte ptr [ebp], 0x22
            //   7520                 | jne                 0x22
            //   8d7d01               | lea                 edi, [ebp + 1]

        $sequence_4 = { 83c9ff 33c0 8d942488030000 f2ae f7d1 49 }
            // n = 6, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   8d942488030000       | lea                 edx, [esp + 0x388]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx

        $sequence_5 = { 77c8 bf???????? 83c9ff 33c0 f2ae f7d1 }
            // n = 6, score = 100
            //   77c8                 | ja                  0xffffffca
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_6 = { b940000000 33c0 8d7c2419 8894241c010000 f3ab }
            // n = 5, score = 100
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   8d7c2419             | lea                 edi, [esp + 0x19]
            //   8894241c010000       | mov                 byte ptr [esp + 0x11c], dl
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_7 = { 83c9ff 33c0 f2ae f7d1 2bf9 55 }
            // n = 6, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   55                   | push                ebp

        $sequence_8 = { 8dbc2494060000 83c9ff 33c0 f2ae f7d1 49 }
            // n = 6, score = 100
            //   8dbc2494060000       | lea                 edi, [esp + 0x694]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx

        $sequence_9 = { f7d1 49 83f903 77c8 bf???????? }
            // n = 5, score = 100
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   83f903               | cmp                 ecx, 3
            //   77c8                 | ja                  0xffffffca
            //   bf????????           |                     

    condition:
        7 of them and filesize < 106496
}