rule win_bluenoroff_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.bluenoroff."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bluenoroff"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f802 750e 8d95fcfffeff 52 68???????? }
            // n = 5, score = 300
            //   83f802               | cmp                 eax, 2
            //   750e                 | jne                 0x10
            //   8d95fcfffeff         | lea                 edx, [ebp - 0x10004]
            //   52                   | push                edx
            //   68????????           |                     

        $sequence_1 = { 8d8df8feffff 51 ff15???????? 0fbe95f8feffff 68???????? }
            // n = 5, score = 300
            //   8d8df8feffff         | lea                 ecx, [ebp - 0x108]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   0fbe95f8feffff       | movsx               edx, byte ptr [ebp - 0x108]
            //   68????????           |                     

        $sequence_2 = { 85f6 743a 8d85fcfffeff 50 }
            // n = 4, score = 300
            //   85f6                 | test                esi, esi
            //   743a                 | je                  0x3c
            //   8d85fcfffeff         | lea                 eax, [ebp - 0x10004]
            //   50                   | push                eax

        $sequence_3 = { 894e04 e8???????? 83c40c 5f }
            // n = 4, score = 300
            //   894e04               | mov                 dword ptr [esi + 4], ecx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   5f                   | pop                 edi

        $sequence_4 = { eb10 85c0 7514 8d85fcfffeff 50 68???????? }
            // n = 6, score = 300
            //   eb10                 | jmp                 0x12
            //   85c0                 | test                eax, eax
            //   7514                 | jne                 0x16
            //   8d85fcfffeff         | lea                 eax, [ebp - 0x10004]
            //   50                   | push                eax
            //   68????????           |                     

        $sequence_5 = { 83feff 7433 8d4e01 51 6a40 }
            // n = 5, score = 300
            //   83feff               | cmp                 esi, -1
            //   7433                 | je                  0x35
            //   8d4e01               | lea                 ecx, [esi + 1]
            //   51                   | push                ecx
            //   6a40                 | push                0x40

        $sequence_6 = { 68ffff0000 50 e8???????? 33c0 }
            // n = 4, score = 300
            //   68ffff0000           | push                0xffff
            //   50                   | push                eax
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 56 6a10 68???????? e8???????? 83c410 813ed0c0b0a0 }
            // n = 6, score = 300
            //   56                   | push                esi
            //   6a10                 | push                0x10
            //   68????????           |                     
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   813ed0c0b0a0         | cmp                 dword ptr [esi], 0xa0b0c0d0

        $sequence_8 = { 33ff 53 ff15???????? 8b450c 85c0 7402 }
            // n = 6, score = 300
            //   33ff                 | xor                 edi, edi
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   85c0                 | test                eax, eax
            //   7402                 | je                  4

        $sequence_9 = { 50 0fb785f4fffeff 51 52 }
            // n = 4, score = 300
            //   50                   | push                eax
            //   0fb785f4fffeff       | movzx               eax, word ptr [ebp - 0x1000c]
            //   51                   | push                ecx
            //   52                   | push                edx

    condition:
        7 of them and filesize < 303104
}