rule win_orpcbackdoor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.orpcbackdoor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.orpcbackdoor"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b45fc 83e818 50 e8???????? 59 59 }
            // n = 6, score = 100
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   83e818               | sub                 eax, 0x18
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

        $sequence_1 = { 59 ffb5e4f6feff ffb568f5feff 8d8594f9ffff 50 e8???????? 83c40c }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   ffb5e4f6feff         | push                dword ptr [ebp - 0x1091c]
            //   ffb568f5feff         | push                dword ptr [ebp - 0x10a98]
            //   8d8594f9ffff         | lea                 eax, [ebp - 0x66c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_2 = { 6a0c 59 be???????? 8dbdc0faffff f3a5 66a5 a4 }
            // n = 7, score = 100
            //   6a0c                 | push                0xc
            //   59                   | pop                 ecx
            //   be????????           |                     
            //   8dbdc0faffff         | lea                 edi, [ebp - 0x540]
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   66a5                 | movsw               word ptr es:[edi], word ptr [esi]
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]

        $sequence_3 = { 8b45c4 0fbe00 83f87f 7452 8b45c4 0fbe00 85c0 }
            // n = 7, score = 100
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   0fbe00               | movsx               eax, byte ptr [eax]
            //   83f87f               | cmp                 eax, 0x7f
            //   7452                 | je                  0x54
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   0fbe00               | movsx               eax, byte ptr [eax]
            //   85c0                 | test                eax, eax

        $sequence_4 = { 753e 8b45c8 40 40 3b4524 7734 8b4520 }
            // n = 7, score = 100
            //   753e                 | jne                 0x40
            //   8b45c8               | mov                 eax, dword ptr [ebp - 0x38]
            //   40                   | inc                 eax
            //   40                   | inc                 eax
            //   3b4524               | cmp                 eax, dword ptr [ebp + 0x24]
            //   7734                 | ja                  0x36
            //   8b4520               | mov                 eax, dword ptr [ebp + 0x20]

        $sequence_5 = { 83a5b0fdffff00 8d85b0fdffff 50 6a02 8b85b4fdffff 8b00 ffb5b4fdffff }
            // n = 7, score = 100
            //   83a5b0fdffff00       | and                 dword ptr [ebp - 0x250], 0
            //   8d85b0fdffff         | lea                 eax, [ebp - 0x250]
            //   50                   | push                eax
            //   6a02                 | push                2
            //   8b85b4fdffff         | mov                 eax, dword ptr [ebp - 0x24c]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   ffb5b4fdffff         | push                dword ptr [ebp - 0x24c]

        $sequence_6 = { 8841fd eb0e a1???????? 0345f4 c640fd00 eb05 }
            // n = 6, score = 100
            //   8841fd               | mov                 byte ptr [ecx - 3], al
            //   eb0e                 | jmp                 0x10
            //   a1????????           |                     
            //   0345f4               | add                 eax, dword ptr [ebp - 0xc]
            //   c640fd00             | mov                 byte ptr [eax - 3], 0
            //   eb05                 | jmp                 7

        $sequence_7 = { 6a01 6a40 6a01 6a01 8d8da8fcfeff e8???????? 50 }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   6a40                 | push                0x40
            //   6a01                 | push                1
            //   6a01                 | push                1
            //   8d8da8fcfeff         | lea                 ecx, [ebp - 0x10358]
            //   e8????????           |                     
            //   50                   | push                eax

        $sequence_8 = { 3c5a 7712 0fbec1 83e820 83e07f 8a044589700310 }
            // n = 6, score = 100
            //   3c5a                 | cmp                 al, 0x5a
            //   7712                 | ja                  0x14
            //   0fbec1               | movsx               eax, cl
            //   83e820               | sub                 eax, 0x20
            //   83e07f               | and                 eax, 0x7f
            //   8a044589700310       | mov                 al, byte ptr [eax*2 + 0x10037089]

        $sequence_9 = { 0fbe4001 83f858 7508 8b45c4 40 40 }
            // n = 6, score = 100
            //   0fbe4001             | movsx               eax, byte ptr [eax + 1]
            //   83f858               | cmp                 eax, 0x58
            //   7508                 | jne                 0xa
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   40                   | inc                 eax
            //   40                   | inc                 eax

    condition:
        7 of them and filesize < 918528
}