rule win_makadocs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.makadocs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.makadocs"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b5d08 56 57 33f6 33ff 897dfc 3b1cfdf0524200 }
            // n = 7, score = 100
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   57                   | push                edi
            //   33f6                 | xor                 esi, esi
            //   33ff                 | xor                 edi, edi
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   3b1cfdf0524200       | cmp                 ebx, dword ptr [edi*8 + 0x4252f0]

        $sequence_1 = { 8bc6 89a554ffffff 8bfc e8???????? 83c010 8907 51 }
            // n = 7, score = 100
            //   8bc6                 | mov                 eax, esi
            //   89a554ffffff         | mov                 dword ptr [ebp - 0xac], esp
            //   8bfc                 | mov                 edi, esp
            //   e8????????           |                     
            //   83c010               | add                 eax, 0x10
            //   8907                 | mov                 dword ptr [edi], eax
            //   51                   | push                ecx

        $sequence_2 = { 8b42f4 8d7001 8b42f8 b901000000 2b4afc 2bc6 0bc1 }
            // n = 7, score = 100
            //   8b42f4               | mov                 eax, dword ptr [edx - 0xc]
            //   8d7001               | lea                 esi, [eax + 1]
            //   8b42f8               | mov                 eax, dword ptr [edx - 8]
            //   b901000000           | mov                 ecx, 1
            //   2b4afc               | sub                 ecx, dword ptr [edx - 4]
            //   2bc6                 | sub                 eax, esi
            //   0bc1                 | or                  eax, ecx

        $sequence_3 = { 83c408 52 8b54243c 8d442438 50 8d4c2478 51 }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   52                   | push                edx
            //   8b54243c             | mov                 edx, dword ptr [esp + 0x3c]
            //   8d442438             | lea                 eax, [esp + 0x38]
            //   50                   | push                eax
            //   8d4c2478             | lea                 ecx, [esp + 0x78]
            //   51                   | push                ecx

        $sequence_4 = { 83c408 c644246834 8b00 8d4c2420 51 8bc8 e8???????? }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   c644246834           | mov                 byte ptr [esp + 0x68], 0x34
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   51                   | push                ecx
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     

        $sequence_5 = { 8b442410 56 e8???????? 85f6 7409 }
            // n = 5, score = 100
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   56                   | push                esi
            //   e8????????           |                     
            //   85f6                 | test                esi, esi
            //   7409                 | je                  0xb

        $sequence_6 = { c645fc41 8bc4 89a54cffffff 50 b9???????? e8???????? 8dbd54ffffff }
            // n = 7, score = 100
            //   c645fc41             | mov                 byte ptr [ebp - 4], 0x41
            //   8bc4                 | mov                 eax, esp
            //   89a54cffffff         | mov                 dword ptr [ebp - 0xb4], esp
            //   50                   | push                eax
            //   b9????????           |                     
            //   e8????????           |                     
            //   8dbd54ffffff         | lea                 edi, [ebp - 0xac]

        $sequence_7 = { ffd5 8b06 3b78f8 7f0f 8978f4 8b0e c6040f00 }
            // n = 7, score = 100
            //   ffd5                 | call                ebp
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   3b78f8               | cmp                 edi, dword ptr [eax - 8]
            //   7f0f                 | jg                  0x11
            //   8978f4               | mov                 dword ptr [eax - 0xc], edi
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   c6040f00             | mov                 byte ptr [edi + ecx], 0

        $sequence_8 = { 8b4c2410 51 ffd7 85c0 744c 8b44241c 50 }
            // n = 7, score = 100
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   51                   | push                ecx
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   744c                 | je                  0x4e
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   50                   | push                eax

        $sequence_9 = { 3c09 0fb6c0 7605 83c037 eb03 83c030 8806 }
            // n = 7, score = 100
            //   3c09                 | cmp                 al, 9
            //   0fb6c0               | movzx               eax, al
            //   7605                 | jbe                 7
            //   83c037               | add                 eax, 0x37
            //   eb03                 | jmp                 5
            //   83c030               | add                 eax, 0x30
            //   8806                 | mov                 byte ptr [esi], al

    condition:
        7 of them and filesize < 344064
}