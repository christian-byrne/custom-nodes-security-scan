rule win_felismus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.felismus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.felismus"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 8b35???????? 83c404 53 ffd6 8b442410 }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   8b35????????         |                     
            //   83c404               | add                 esp, 4
            //   53                   | push                ebx
            //   ffd6                 | call                esi
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]

        $sequence_1 = { 8b4e08 8b560c 89442418 8b4610 894c241c 89442424 }
            // n = 6, score = 100
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   8b560c               | mov                 edx, dword ptr [esi + 0xc]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]
            //   894c241c             | mov                 dword ptr [esp + 0x1c], ecx
            //   89442424             | mov                 dword ptr [esp + 0x24], eax

        $sequence_2 = { 89542410 8b5110 56 2be8 57 89542420 bb01000000 }
            // n = 7, score = 100
            //   89542410             | mov                 dword ptr [esp + 0x10], edx
            //   8b5110               | mov                 edx, dword ptr [ecx + 0x10]
            //   56                   | push                esi
            //   2be8                 | sub                 ebp, eax
            //   57                   | push                edi
            //   89542420             | mov                 dword ptr [esp + 0x20], edx
            //   bb01000000           | mov                 ebx, 1

        $sequence_3 = { 8d5640 8bfa f3ab 8b4618 33c9 85c0 7e24 }
            // n = 7, score = 100
            //   8d5640               | lea                 edx, [esi + 0x40]
            //   8bfa                 | mov                 edi, edx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8b4618               | mov                 eax, dword ptr [esi + 0x18]
            //   33c9                 | xor                 ecx, ecx
            //   85c0                 | test                eax, eax
            //   7e24                 | jle                 0x26

        $sequence_4 = { 66ab aa b940000000 33c0 8dbc24b1050000 }
            // n = 5, score = 100
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   8dbc24b1050000       | lea                 edi, [esp + 0x5b1]

        $sequence_5 = { 85c0 740f 8d8c2414010000 68???????? 51 eb0d 8d942414010000 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   740f                 | je                  0x11
            //   8d8c2414010000       | lea                 ecx, [esp + 0x114]
            //   68????????           |                     
            //   51                   | push                ecx
            //   eb0d                 | jmp                 0xf
            //   8d942414010000       | lea                 edx, [esp + 0x114]

        $sequence_6 = { 8b442424 50 56 ff15???????? 56 ff15???????? 83f8ff }
            // n = 7, score = 100
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   50                   | push                eax
            //   56                   | push                esi
            //   ff15????????         |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1

        $sequence_7 = { 7cd0 8b461c 8bce 50 e8???????? 8b7e1c }
            // n = 6, score = 100
            //   7cd0                 | jl                  0xffffffd2
            //   8b461c               | mov                 eax, dword ptr [esi + 0x1c]
            //   8bce                 | mov                 ecx, esi
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b7e1c               | mov                 edi, dword ptr [esi + 0x1c]

        $sequence_8 = { 51 8bfb 83c9ff 33c0 895514 f2ae f7d1 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   8bfb                 | mov                 edi, ebx
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   895514               | mov                 dword ptr [ebp + 0x14], edx
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_9 = { 83c408 85ff 742b 57 ff15???????? 83f816 7e1f }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   85ff                 | test                edi, edi
            //   742b                 | je                  0x2d
            //   57                   | push                edi
            //   ff15????????         |                     
            //   83f816               | cmp                 eax, 0x16
            //   7e1f                 | jle                 0x21

    condition:
        7 of them and filesize < 204800
}