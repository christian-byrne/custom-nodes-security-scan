rule win_blackenergy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.blackenergy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.blackenergy"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { bb01000000 eb02 03d8 8bc2 e9???????? 8b4df4 014dd8 }
            // n = 7, score = 200
            //   bb01000000           | mov                 ebx, 1
            //   eb02                 | jmp                 4
            //   03d8                 | add                 ebx, eax
            //   8bc2                 | mov                 eax, edx
            //   e9????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   014dd8               | add                 dword ptr [ebp - 0x28], ecx

        $sequence_1 = { 39750c 740c 56 56 ff7508 ff550c }
            // n = 6, score = 200
            //   39750c               | cmp                 dword ptr [ebp + 0xc], esi
            //   740c                 | je                  0xe
            //   56                   | push                esi
            //   56                   | push                esi
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff550c               | call                dword ptr [ebp + 0xc]

        $sequence_2 = { 8b7df4 8b75f0 8b4d08 f3a4 a1???????? 33c9 3bc1 }
            // n = 7, score = 200
            //   8b7df4               | mov                 edi, dword ptr [ebp - 0xc]
            //   8b75f0               | mov                 esi, dword ptr [ebp - 0x10]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   a1????????           |                     
            //   33c9                 | xor                 ecx, ecx
            //   3bc1                 | cmp                 eax, ecx

        $sequence_3 = { e8???????? 2bc6 3bc7 760f 6bd20a 47 e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   2bc6                 | sub                 eax, esi
            //   3bc7                 | cmp                 eax, edi
            //   760f                 | jbe                 0x11
            //   6bd20a               | imul                edx, edx, 0xa
            //   47                   | inc                 edi
            //   e8????????           |                     

        $sequence_4 = { 0f848f000000 53 8d45f0 50 8d45d8 50 }
            // n = 6, score = 200
            //   0f848f000000         | je                  0x95
            //   53                   | push                ebx
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   50                   | push                eax

        $sequence_5 = { 58 e8???????? 85c0 75ae 5e 5f c9 }
            // n = 7, score = 200
            //   58                   | pop                 eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   75ae                 | jne                 0xffffffb0
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   c9                   | leave               

        $sequence_6 = { 85c0 7441 8b5dc8 8b5b28 85db 7427 8b4de4 }
            // n = 7, score = 200
            //   85c0                 | test                eax, eax
            //   7441                 | je                  0x43
            //   8b5dc8               | mov                 ebx, dword ptr [ebp - 0x38]
            //   8b5b28               | mov                 ebx, dword ptr [ebx + 0x28]
            //   85db                 | test                ebx, ebx
            //   7427                 | je                  0x29
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]

        $sequence_7 = { 33f6 56 6810000002 6a03 56 6a01 6800000080 }
            // n = 7, score = 200
            //   33f6                 | xor                 esi, esi
            //   56                   | push                esi
            //   6810000002           | push                0x2000010
            //   6a03                 | push                3
            //   56                   | push                esi
            //   6a01                 | push                1
            //   6800000080           | push                0x80000000

        $sequence_8 = { 8b583c 03d8 895dc8 8b4334 8945e0 33f6 46 }
            // n = 7, score = 200
            //   8b583c               | mov                 ebx, dword ptr [eax + 0x3c]
            //   03d8                 | add                 ebx, eax
            //   895dc8               | mov                 dword ptr [ebp - 0x38], ebx
            //   8b4334               | mov                 eax, dword ptr [ebx + 0x34]
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   33f6                 | xor                 esi, esi
            //   46                   | inc                 esi

        $sequence_9 = { 50 ff15???????? 50 ff5508 6a02 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff5508               | call                dword ptr [ebp + 8]
            //   6a02                 | push                2

    condition:
        7 of them and filesize < 98304
}