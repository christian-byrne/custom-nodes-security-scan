rule win_dnschanger_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.dnschanger."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dnschanger"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 8bf0 8b442414 6800010000 }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   6800010000           | push                0x100

        $sequence_1 = { b301 57 ff15???????? 85f6 740c 56 6a00 }
            // n = 7, score = 100
            //   b301                 | mov                 bl, 1
            //   57                   | push                edi
            //   ff15????????         |                     
            //   85f6                 | test                esi, esi
            //   740c                 | je                  0xe
            //   56                   | push                esi
            //   6a00                 | push                0

        $sequence_2 = { 8bc2 03c7 eb02 8bc7 5f }
            // n = 5, score = 100
            //   8bc2                 | mov                 eax, edx
            //   03c7                 | add                 eax, edi
            //   eb02                 | jmp                 4
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi

        $sequence_3 = { be04000000 5f 8bc6 5e 81c494000000 }
            // n = 5, score = 100
            //   be04000000           | mov                 esi, 4
            //   5f                   | pop                 edi
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   81c494000000         | add                 esp, 0x94

        $sequence_4 = { ff7508 66ab aa ff15???????? }
            // n = 4, score = 100
            //   ff7508               | push                dword ptr [ebp + 8]
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   ff15????????         |                     

        $sequence_5 = { 8b542408 53 8a1a 8819 41 42 84db }
            // n = 7, score = 100
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   53                   | push                ebx
            //   8a1a                 | mov                 bl, byte ptr [edx]
            //   8819                 | mov                 byte ptr [ecx], bl
            //   41                   | inc                 ecx
            //   42                   | inc                 edx
            //   84db                 | test                bl, bl

        $sequence_6 = { 3b0e 72f2 57 57 57 }
            // n = 5, score = 100
            //   3b0e                 | cmp                 ecx, dword ptr [esi]
            //   72f2                 | jb                  0xfffffff4
            //   57                   | push                edi
            //   57                   | push                edi
            //   57                   | push                edi

        $sequence_7 = { 57 57 56 57 ff75fc ff15???????? }
            // n = 6, score = 100
            //   57                   | push                edi
            //   57                   | push                edi
            //   56                   | push                esi
            //   57                   | push                edi
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff15????????         |                     

        $sequence_8 = { 5e 81c494000000 c3 83f806 }
            // n = 4, score = 100
            //   5e                   | pop                 esi
            //   81c494000000         | add                 esp, 0x94
            //   c3                   | ret                 
            //   83f806               | cmp                 eax, 6

        $sequence_9 = { f3aa 8bc6 5f 5e c3 }
            // n = 5, score = 100
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   8bc6                 | mov                 eax, esi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 49152
}