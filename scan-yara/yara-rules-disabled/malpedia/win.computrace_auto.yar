rule win_computrace_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.computrace."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.computrace"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff75cc e8???????? 3975e4 753a }
            // n = 4, score = 200
            //   ff75cc               | push                dword ptr [ebp - 0x34]
            //   e8????????           |                     
            //   3975e4               | cmp                 dword ptr [ebp - 0x1c], esi
            //   753a                 | jne                 0x3c

        $sequence_1 = { e8???????? 8a4002 8b0d???????? 8801 ff35???????? }
            // n = 5, score = 200
            //   e8????????           |                     
            //   8a4002               | mov                 al, byte ptr [eax + 2]
            //   8b0d????????         |                     
            //   8801                 | mov                 byte ptr [ecx], al
            //   ff35????????         |                     

        $sequence_2 = { 740e 837de400 7408 037de4 897dd8 eba6 8b4514 }
            // n = 7, score = 200
            //   740e                 | je                  0x10
            //   837de400             | cmp                 dword ptr [ebp - 0x1c], 0
            //   7408                 | je                  0xa
            //   037de4               | add                 edi, dword ptr [ebp - 0x1c]
            //   897dd8               | mov                 dword ptr [ebp - 0x28], edi
            //   eba6                 | jmp                 0xffffffa8
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]

        $sequence_3 = { 7503 800e08 e8???????? 894604 ff750c 8f4618 }
            // n = 6, score = 200
            //   7503                 | jne                 5
            //   800e08               | or                  byte ptr [esi], 8
            //   e8????????           |                     
            //   894604               | mov                 dword ptr [esi + 4], eax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8f4618               | pop                 dword ptr [esi + 0x18]

        $sequence_4 = { e30d 83c00a 51 ff750c 50 e8???????? }
            // n = 6, score = 200
            //   e30d                 | jecxz               0xf
            //   83c00a               | add                 eax, 0xa
            //   51                   | push                ecx
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_5 = { e8???????? 837de400 0f8593feffff 8b86481b0000 83786c00 0f8483feffff }
            // n = 6, score = 200
            //   e8????????           |                     
            //   837de400             | cmp                 dword ptr [ebp - 0x1c], 0
            //   0f8593feffff         | jne                 0xfffffe99
            //   8b86481b0000         | mov                 eax, dword ptr [esi + 0x1b48]
            //   83786c00             | cmp                 dword ptr [eax + 0x6c], 0
            //   0f8483feffff         | je                  0xfffffe89

        $sequence_6 = { 8b7508 80665cfe 33c0 8945fc 8845fb 6689461a 48 }
            // n = 7, score = 200
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   80665cfe             | and                 byte ptr [esi + 0x5c], 0xfe
            //   33c0                 | xor                 eax, eax
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8845fb               | mov                 byte ptr [ebp - 5], al
            //   6689461a             | mov                 word ptr [esi + 0x1a], ax
            //   48                   | dec                 eax

        $sequence_7 = { 7414 c745dc01000000 897d8c 6af1 }
            // n = 4, score = 200
            //   7414                 | je                  0x16
            //   c745dc01000000       | mov                 dword ptr [ebp - 0x24], 1
            //   897d8c               | mov                 dword ptr [ebp - 0x74], edi
            //   6af1                 | push                -0xf

        $sequence_8 = { e8???????? 8945e4 3bc6 7417 }
            // n = 4, score = 200
            //   e8????????           |                     
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   3bc6                 | cmp                 eax, esi
            //   7417                 | je                  0x19

        $sequence_9 = { ff15???????? f7d8 1bc0 40 57 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   40                   | inc                 eax
            //   57                   | push                edi

    condition:
        7 of them and filesize < 73728
}