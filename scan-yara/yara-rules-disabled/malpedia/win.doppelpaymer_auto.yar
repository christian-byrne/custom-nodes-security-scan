rule win_doppelpaymer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.doppelpaymer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doppelpaymer"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 80790600 7523 80790264 751d }
            // n = 4, score = 700
            //   80790600             | cmp                 byte ptr [ecx + 6], 0
            //   7523                 | jne                 0x25
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f

        $sequence_1 = { 80790561 7517 80790361 7511 80790474 }
            // n = 5, score = 700
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19
            //   80790361             | cmp                 byte ptr [ecx + 3], 0x61
            //   7511                 | jne                 0x13
            //   80790474             | cmp                 byte ptr [ecx + 4], 0x74

        $sequence_2 = { e8???????? 8b08 e8???????? 3db6389096 }
            // n = 4, score = 700
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   e8????????           |                     
            //   3db6389096           | cmp                 eax, 0x969038b6

        $sequence_3 = { 83ec28 6800002002 6a00 6a01 }
            // n = 4, score = 700
            //   83ec28               | sub                 esp, 0x28
            //   6800002002           | push                0x2200000
            //   6a00                 | push                0
            //   6a01                 | push                1

        $sequence_4 = { 80790264 751d 80790561 7517 }
            // n = 4, score = 700
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19

        $sequence_5 = { baffffff7f 43 e8???????? 3bd8 }
            // n = 4, score = 700
            //   baffffff7f           | mov                 edx, 0x7fffffff
            //   43                   | inc                 ebx
            //   e8????????           |                     
            //   3bd8                 | cmp                 ebx, eax

        $sequence_6 = { 8d8c2450010000 e8???????? 89bc245c010000 8d442404 }
            // n = 4, score = 600
            //   8d8c2450010000       | lea                 ecx, [esp + 0x150]
            //   e8????????           |                     
            //   89bc245c010000       | mov                 dword ptr [esp + 0x15c], edi
            //   8d442404             | lea                 eax, [esp + 4]

        $sequence_7 = { e8???????? 8d8c2424030000 e8???????? 6a10 }
            // n = 4, score = 600
            //   e8????????           |                     
            //   8d8c2424030000       | lea                 ecx, [esp + 0x324]
            //   e8????????           |                     
            //   6a10                 | push                0x10

        $sequence_8 = { c20400 8b4e44 8b4110 5e }
            // n = 4, score = 100
            //   c20400               | ret                 4
            //   8b4e44               | mov                 ecx, dword ptr [esi + 0x44]
            //   8b4110               | mov                 eax, dword ptr [ecx + 0x10]
            //   5e                   | pop                 esi

        $sequence_9 = { 8955ec e8???????? 8d0d6f302b00 890424 894c2404 e8???????? 8d0d34302b00 }
            // n = 7, score = 100
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   e8????????           |                     
            //   8d0d6f302b00         | lea                 ecx, [0x2b306f]
            //   890424               | mov                 dword ptr [esp], eax
            //   894c2404             | mov                 dword ptr [esp + 4], ecx
            //   e8????????           |                     
            //   8d0d34302b00         | lea                 ecx, [0x2b3034]

        $sequence_10 = { 890c24 8945c8 e8???????? 8b4de8 890c24 8945c4 }
            // n = 6, score = 100
            //   890c24               | mov                 dword ptr [esp], ecx
            //   8945c8               | mov                 dword ptr [ebp - 0x38], eax
            //   e8????????           |                     
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   890c24               | mov                 dword ptr [esp], ecx
            //   8945c4               | mov                 dword ptr [ebp - 0x3c], eax

        $sequence_11 = { c3 8b45e8 b99054c837 8a55f3 80c2c9 2b4df4 }
            // n = 6, score = 100
            //   c3                   | ret                 
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   b99054c837           | mov                 ecx, 0x37c85490
            //   8a55f3               | mov                 dl, byte ptr [ebp - 0xd]
            //   80c2c9               | add                 dl, 0xc9
            //   2b4df4               | sub                 ecx, dword ptr [ebp - 0xc]

        $sequence_12 = { 83ec08 8b4508 8b4054 89e1 894104 }
            // n = 5, score = 100
            //   83ec08               | sub                 esp, 8
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b4054               | mov                 eax, dword ptr [eax + 0x54]
            //   89e1                 | mov                 ecx, esp
            //   894104               | mov                 dword ptr [ecx + 4], eax

        $sequence_13 = { 8945c4 74d0 e9???????? 31c0 8b4db8 83c104 }
            // n = 6, score = 100
            //   8945c4               | mov                 dword ptr [ebp - 0x3c], eax
            //   74d0                 | je                  0xffffffd2
            //   e9????????           |                     
            //   31c0                 | xor                 eax, eax
            //   8b4db8               | mov                 ecx, dword ptr [ebp - 0x48]
            //   83c104               | add                 ecx, 4

        $sequence_14 = { 5b 5d c3 b8e2f49a29 2b45ec 8b4dcc 81c1ffff0000 }
            // n = 7, score = 100
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   b8e2f49a29           | mov                 eax, 0x299af4e2
            //   2b45ec               | sub                 eax, dword ptr [ebp - 0x14]
            //   8b4dcc               | mov                 ecx, dword ptr [ebp - 0x34]
            //   81c1ffff0000         | add                 ecx, 0xffff

        $sequence_15 = { e8???????? 8b4de8 8b55d8 895128 8b75c4 897114 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   8b55d8               | mov                 edx, dword ptr [ebp - 0x28]
            //   895128               | mov                 dword ptr [ecx + 0x28], edx
            //   8b75c4               | mov                 esi, dword ptr [ebp - 0x3c]
            //   897114               | mov                 dword ptr [ecx + 0x14], esi

        $sequence_16 = { a1???????? ffd0 8945bc 31c0 8b4de8 83c154 8b55e8 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   ffd0                 | call                eax
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   31c0                 | xor                 eax, eax
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   83c154               | add                 ecx, 0x54
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]

        $sequence_17 = { c20400 8b400c 8b4810 56 8b700c 57 }
            // n = 6, score = 100
            //   c20400               | ret                 4
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8b4810               | mov                 ecx, dword ptr [eax + 0x10]
            //   56                   | push                esi
            //   8b700c               | mov                 esi, dword ptr [eax + 0xc]
            //   57                   | push                edi

    condition:
        7 of them and filesize < 7266304
}