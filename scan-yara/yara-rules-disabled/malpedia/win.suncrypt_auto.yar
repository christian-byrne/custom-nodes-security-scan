rule win_suncrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.suncrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suncrypt"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 6a00 6a00 6a03 6a00 6a00 ff75b8 }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a03                 | push                3
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff75b8               | push                dword ptr [ebp - 0x48]

        $sequence_1 = { 8b8d60ffffff 8945c8 8b856cffffff 8945ac 8b8564ffffff 8945cc 8b855cffffff }
            // n = 7, score = 200
            //   8b8d60ffffff         | mov                 ecx, dword ptr [ebp - 0xa0]
            //   8945c8               | mov                 dword ptr [ebp - 0x38], eax
            //   8b856cffffff         | mov                 eax, dword ptr [ebp - 0x94]
            //   8945ac               | mov                 dword ptr [ebp - 0x54], eax
            //   8b8564ffffff         | mov                 eax, dword ptr [ebp - 0x9c]
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   8b855cffffff         | mov                 eax, dword ptr [ebp - 0xa4]

        $sequence_2 = { c645f84c c645f90e c645fa44 c645fb4c c645fc4c 8a45f4 c645fd00 }
            // n = 7, score = 200
            //   c645f84c             | mov                 byte ptr [ebp - 8], 0x4c
            //   c645f90e             | mov                 byte ptr [ebp - 7], 0xe
            //   c645fa44             | mov                 byte ptr [ebp - 6], 0x44
            //   c645fb4c             | mov                 byte ptr [ebp - 5], 0x4c
            //   c645fc4c             | mov                 byte ptr [ebp - 4], 0x4c
            //   8a45f4               | mov                 al, byte ptr [ebp - 0xc]
            //   c645fd00             | mov                 byte ptr [ebp - 3], 0

        $sequence_3 = { 02ca 0fbec0 33c8 884c15ec 42 83fa11 72e8 }
            // n = 7, score = 200
            //   02ca                 | add                 cl, dl
            //   0fbec0               | movsx               eax, al
            //   33c8                 | xor                 ecx, eax
            //   884c15ec             | mov                 byte ptr [ebp + edx - 0x14], cl
            //   42                   | inc                 edx
            //   83fa11               | cmp                 edx, 0x11
            //   72e8                 | jb                  0xffffffea

        $sequence_4 = { 894dd0 034d98 8bf9 337dcc c1c70c 03c7 898534ffffff }
            // n = 7, score = 200
            //   894dd0               | mov                 dword ptr [ebp - 0x30], ecx
            //   034d98               | add                 ecx, dword ptr [ebp - 0x68]
            //   8bf9                 | mov                 edi, ecx
            //   337dcc               | xor                 edi, dword ptr [ebp - 0x34]
            //   c1c70c               | rol                 edi, 0xc
            //   03c7                 | add                 eax, edi
            //   898534ffffff         | mov                 dword ptr [ebp - 0xcc], eax

        $sequence_5 = { c3 8b07 0fb74f0e 8b4004 8b0488 894724 }
            // n = 6, score = 200
            //   c3                   | ret                 
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   0fb74f0e             | movzx               ecx, word ptr [edi + 0xe]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   8b0488               | mov                 eax, dword ptr [eax + ecx*4]
            //   894724               | mov                 dword ptr [edi + 0x24], eax

        $sequence_6 = { 8b7308 83c140 8b7da0 894df4 8b4df0 eb7e }
            // n = 6, score = 200
            //   8b7308               | mov                 esi, dword ptr [ebx + 8]
            //   83c140               | add                 ecx, 0x40
            //   8b7da0               | mov                 edi, dword ptr [ebp - 0x60]
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   eb7e                 | jmp                 0x80

        $sequence_7 = { 8b45a8 0411 c645be00 83f00a 33d2 8845bd 8a45ac }
            // n = 7, score = 200
            //   8b45a8               | mov                 eax, dword ptr [ebp - 0x58]
            //   0411                 | add                 al, 0x11
            //   c645be00             | mov                 byte ptr [ebp - 0x42], 0
            //   83f00a               | xor                 eax, 0xa
            //   33d2                 | xor                 edx, edx
            //   8845bd               | mov                 byte ptr [ebp - 0x43], al
            //   8a45ac               | mov                 al, byte ptr [ebp - 0x54]

        $sequence_8 = { 660f6dec 660fefd8 660f6ccc 0f28a500feffff 0f1118 83c010 0f1007 }
            // n = 7, score = 200
            //   660f6dec             | punpckhqdq          xmm5, xmm4
            //   660fefd8             | pxor                xmm3, xmm0
            //   660f6ccc             | punpcklqdq          xmm1, xmm4
            //   0f28a500feffff       | movaps              xmm4, xmmword ptr [ebp - 0x200]
            //   0f1118               | movups              xmmword ptr [eax], xmm3
            //   83c010               | add                 eax, 0x10
            //   0f1007               | movups              xmm0, xmmword ptr [edi]

        $sequence_9 = { 7324 8d0c10 2bf2 894df0 8b4df8 2bca }
            // n = 6, score = 200
            //   7324                 | jae                 0x26
            //   8d0c10               | lea                 ecx, [eax + edx]
            //   2bf2                 | sub                 esi, edx
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   2bca                 | sub                 ecx, edx

    condition:
        7 of them and filesize < 172032
}