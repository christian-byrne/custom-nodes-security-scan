rule win_ransomlock_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.ransomlock."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ransomlock"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 83c408 8b0d???????? 6a64 51 ff15???????? }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b0d????????         |                     
            //   6a64                 | push                0x64
            //   51                   | push                ecx
            //   ff15????????         |                     

        $sequence_1 = { 99 2bc2 6a00 8bd1 d1ea d1f8 }
            // n = 6, score = 100
            //   99                   | cdq                 
            //   2bc2                 | sub                 eax, edx
            //   6a00                 | push                0
            //   8bd1                 | mov                 edx, ecx
            //   d1ea                 | shr                 edx, 1
            //   d1f8                 | sar                 eax, 1

        $sequence_2 = { 8b5120 56 50 ffd2 85c0 7807 c745ec01000000 }
            // n = 7, score = 100
            //   8b5120               | mov                 edx, dword ptr [ecx + 0x20]
            //   56                   | push                esi
            //   50                   | push                eax
            //   ffd2                 | call                edx
            //   85c0                 | test                eax, eax
            //   7807                 | js                  9
            //   c745ec01000000       | mov                 dword ptr [ebp - 0x14], 1

        $sequence_3 = { 0f8418010000 8b08 8d55fc 52 50 8b4120 }
            // n = 6, score = 100
            //   0f8418010000         | je                  0x11e
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8d55fc               | lea                 edx, [ebp - 4]
            //   52                   | push                edx
            //   50                   | push                eax
            //   8b4120               | mov                 eax, dword ptr [ecx + 0x20]

        $sequence_4 = { 0fb7047521664000 4e 6685c0 75ec 57 68???????? ffd3 }
            // n = 7, score = 100
            //   0fb7047521664000     | movzx               eax, word ptr [esi*2 + 0x406621]
            //   4e                   | dec                 esi
            //   6685c0               | test                ax, ax
            //   75ec                 | jne                 0xffffffee
            //   57                   | push                edi
            //   68????????           |                     
            //   ffd3                 | call                ebx

        $sequence_5 = { 50 ff15???????? 83c410 6a01 53 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10
            //   6a01                 | push                1
            //   53                   | push                ebx

        $sequence_6 = { 57 ff15???????? 8d70ff 0fb70477 6685c0 7413 8bff }
            // n = 7, score = 100
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8d70ff               | lea                 esi, [eax - 1]
            //   0fb70477             | movzx               eax, word ptr [edi + esi*2]
            //   6685c0               | test                ax, ax
            //   7413                 | je                  0x15
            //   8bff                 | mov                 edi, edi

        $sequence_7 = { 90 68???????? 33f6 ff15???????? a1???????? 85c0 7429 }
            // n = 7, score = 100
            //   90                   | nop                 
            //   68????????           |                     
            //   33f6                 | xor                 esi, esi
            //   ff15????????         |                     
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   7429                 | je                  0x2b

        $sequence_8 = { 8b45f0 3bc6 0f8418010000 8b08 8d55fc 52 50 }
            // n = 7, score = 100
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   3bc6                 | cmp                 eax, esi
            //   0f8418010000         | je                  0x11e
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8d55fc               | lea                 edx, [ebp - 4]
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_9 = { 52 8d8574fdffff 68???????? 50 ff15???????? 83c410 6a01 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   8d8574fdffff         | lea                 eax, [ebp - 0x28c]
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10
            //   6a01                 | push                1

    condition:
        7 of them and filesize < 360448
}