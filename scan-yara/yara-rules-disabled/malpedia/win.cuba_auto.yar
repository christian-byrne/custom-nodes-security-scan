rule win_cuba_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.cuba."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cuba"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0019 43 41 00444341 }
            // n = 4, score = 100
            //   0019                 | add                 byte ptr [ecx], bl
            //   43                   | inc                 ebx
            //   41                   | inc                 ecx
            //   00444341             | add                 byte ptr [ebx + eax*2 + 0x41], al

        $sequence_1 = { ffb5fcfeffff ffb5fcfdffff ff15???????? 85c0 750d 8b95c0fbffff 53 }
            // n = 7, score = 100
            //   ffb5fcfeffff         | push                dword ptr [ebp - 0x104]
            //   ffb5fcfdffff         | push                dword ptr [ebp - 0x204]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   750d                 | jne                 0xf
            //   8b95c0fbffff         | mov                 edx, dword ptr [ebp - 0x440]
            //   53                   | push                ebx

        $sequence_2 = { 33d2 85c0 7e0c 807c95bc19 740c 42 3bd0 }
            // n = 7, score = 100
            //   33d2                 | xor                 edx, edx
            //   85c0                 | test                eax, eax
            //   7e0c                 | jle                 0xe
            //   807c95bc19           | cmp                 byte ptr [ebp + edx*4 - 0x44], 0x19
            //   740c                 | je                  0xe
            //   42                   | inc                 edx
            //   3bd0                 | cmp                 edx, eax

        $sequence_3 = { 85c0 0f84b4000000 8bbdc8fbffff 53 68???????? 8d85f0fbffff 50 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   0f84b4000000         | je                  0xba
            //   8bbdc8fbffff         | mov                 edi, dword ptr [ebp - 0x438]
            //   53                   | push                ebx
            //   68????????           |                     
            //   8d85f0fbffff         | lea                 eax, [ebp - 0x410]
            //   50                   | push                eax

        $sequence_4 = { 000d???????? 384100 b538 41 }
            // n = 4, score = 100
            //   000d????????         |                     
            //   384100               | cmp                 byte ptr [ecx], al
            //   b538                 | mov                 ch, 0x38
            //   41                   | inc                 ecx

        $sequence_5 = { 0026 45 41 003a }
            // n = 4, score = 100
            //   0026                 | add                 byte ptr [esi], ah
            //   45                   | inc                 ebp
            //   41                   | inc                 ecx
            //   003a                 | add                 byte ptr [edx], bh

        $sequence_6 = { 85c0 750c 57 ff15???????? e9???????? 56 ff15???????? }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   750c                 | jne                 0xe
            //   57                   | push                edi
            //   ff15????????         |                     
            //   e9????????           |                     
            //   56                   | push                esi
            //   ff15????????         |                     

        $sequence_7 = { 0012 45 41 0026 }
            // n = 4, score = 100
            //   0012                 | add                 byte ptr [edx], dl
            //   45                   | inc                 ebp
            //   41                   | inc                 ecx
            //   0026                 | add                 byte ptr [esi], ah

        $sequence_8 = { 6a02 6a00 688b010000 ff75f4 ff15???????? ff75f4 f7d8 }
            // n = 7, score = 100
            //   6a02                 | push                2
            //   6a00                 | push                0
            //   688b010000           | push                0x18b
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   ff15????????         |                     
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   f7d8                 | neg                 eax

        $sequence_9 = { 757a ffb5d4fbffff 50 6800040000 }
            // n = 4, score = 100
            //   757a                 | jne                 0x7c
            //   ffb5d4fbffff         | push                dword ptr [ebp - 0x42c]
            //   50                   | push                eax
            //   6800040000           | push                0x400

        $sequence_10 = { 8945f4 8b4514 40 c745ecac9c4000 894df8 8945fc }
            // n = 6, score = 100
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   40                   | inc                 eax
            //   c745ecac9c4000       | mov                 dword ptr [ebp - 0x14], 0x409cac
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_11 = { 0026 43 41 00b043410062 }
            // n = 4, score = 100
            //   0026                 | add                 byte ptr [esi], ah
            //   43                   | inc                 ebx
            //   41                   | inc                 ecx
            //   00b043410062         | add                 byte ptr [eax + 0x62004143], dh

        $sequence_12 = { 000c43 41 0035???????? 43 }
            // n = 4, score = 100
            //   000c43               | add                 byte ptr [ebx + eax*2], cl
            //   41                   | inc                 ecx
            //   0035????????         |                     
            //   43                   | inc                 ebx

        $sequence_13 = { 003a 45 41 004245 }
            // n = 4, score = 100
            //   003a                 | add                 byte ptr [edx], bh
            //   45                   | inc                 ebp
            //   41                   | inc                 ecx
            //   004245               | add                 byte ptr [edx + 0x45], al

        $sequence_14 = { 03f0 c1ca16 8b85e0feffff 03b40510ffffff 03b0f4b14100 03b5e8feffff 8d0437 }
            // n = 7, score = 100
            //   03f0                 | add                 esi, eax
            //   c1ca16               | ror                 edx, 0x16
            //   8b85e0feffff         | mov                 eax, dword ptr [ebp - 0x120]
            //   03b40510ffffff       | add                 esi, dword ptr [ebp + eax - 0xf0]
            //   03b0f4b14100         | add                 esi, dword ptr [eax + 0x41b1f4]
            //   03b5e8feffff         | add                 esi, dword ptr [ebp - 0x118]
            //   8d0437               | lea                 eax, [edi + esi]

        $sequence_15 = { 000446 41 00d1 45 }
            // n = 4, score = 100
            //   000446               | add                 byte ptr [esi + eax*2], al
            //   41                   | inc                 ecx
            //   00d1                 | add                 cl, dl
            //   45                   | inc                 ebp

    condition:
        7 of them and filesize < 1094656
}