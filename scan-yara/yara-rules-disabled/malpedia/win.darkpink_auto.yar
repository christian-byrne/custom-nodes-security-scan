rule win_darkpink_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.darkpink."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.darkpink"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b048d442a4000 ffe0 f7c703000000 7413 }
            // n = 4, score = 200
            //   8b048d442a4000       | mov                 eax, dword ptr [ecx*4 + 0x402a44]
            //   ffe0                 | jmp                 eax
            //   f7c703000000         | test                edi, 3
            //   7413                 | je                  0x15

        $sequence_1 = { 57 50 683f000f00 6a00 68???????? 6801000080 }
            // n = 6, score = 200
            //   57                   | push                edi
            //   50                   | push                eax
            //   683f000f00           | push                0xf003f
            //   6a00                 | push                0
            //   68????????           |                     
            //   6801000080           | push                0x80000001

        $sequence_2 = { c3 c705????????08924100 b001 c3 68???????? e8???????? c70424???????? }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   c705????????08924100     |     
            //   b001                 | mov                 al, 1
            //   c3                   | ret                 
            //   68????????           |                     
            //   e8????????           |                     
            //   c70424????????       |                     

        $sequence_3 = { 8d41fc 50 56 57 e8???????? 57 }
            // n = 6, score = 200
            //   8d41fc               | lea                 eax, [ecx - 4]
            //   50                   | push                eax
            //   56                   | push                esi
            //   57                   | push                edi
            //   e8????????           |                     
            //   57                   | push                edi

        $sequence_4 = { 8b85b0f8ffff 0fb70485c43c4100 8d0485c0334100 50 8d8590faffff 03c7 50 }
            // n = 7, score = 200
            //   8b85b0f8ffff         | mov                 eax, dword ptr [ebp - 0x750]
            //   0fb70485c43c4100     | movzx               eax, word ptr [eax*4 + 0x413cc4]
            //   8d0485c0334100       | lea                 eax, [eax*4 + 0x4133c0]
            //   50                   | push                eax
            //   8d8590faffff         | lea                 eax, [ebp - 0x570]
            //   03c7                 | add                 eax, edi
            //   50                   | push                eax

        $sequence_5 = { 33f6 8b86f09d4100 85c0 740e }
            // n = 4, score = 200
            //   33f6                 | xor                 esi, esi
            //   8b86f09d4100         | mov                 eax, dword ptr [esi + 0x419df0]
            //   85c0                 | test                eax, eax
            //   740e                 | je                  0x10

        $sequence_6 = { 68???????? ff75f4 ffd6 85c0 0f85ca000000 50 8d45f8 }
            // n = 7, score = 200
            //   68????????           |                     
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   0f85ca000000         | jne                 0xd0
            //   50                   | push                eax
            //   8d45f8               | lea                 eax, [ebp - 8]

        $sequence_7 = { 8b0495f09d4100 f644082801 7421 57 }
            // n = 4, score = 200
            //   8b0495f09d4100       | mov                 eax, dword ptr [edx*4 + 0x419df0]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7421                 | je                  0x23
            //   57                   | push                edi

        $sequence_8 = { e8???????? 6a44 8d45ac 6a00 50 }
            // n = 5, score = 200
            //   e8????????           |                     
            //   6a44                 | push                0x44
            //   8d45ac               | lea                 eax, [ebp - 0x54]
            //   6a00                 | push                0
            //   50                   | push                eax

        $sequence_9 = { 6a26 58 0fb60c85c63c4100 0fb63485c73c4100 8bf9 8985b0f8ffff c1e702 }
            // n = 7, score = 200
            //   6a26                 | push                0x26
            //   58                   | pop                 eax
            //   0fb60c85c63c4100     | movzx               ecx, byte ptr [eax*4 + 0x413cc6]
            //   0fb63485c73c4100     | movzx               esi, byte ptr [eax*4 + 0x413cc7]
            //   8bf9                 | mov                 edi, ecx
            //   8985b0f8ffff         | mov                 dword ptr [ebp - 0x750], eax
            //   c1e702               | shl                 edi, 2

    condition:
        7 of them and filesize < 237568
}