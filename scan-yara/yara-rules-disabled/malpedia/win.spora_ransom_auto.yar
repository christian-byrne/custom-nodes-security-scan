rule win_spora_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.spora_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.spora_ransom"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a3a 8d4641 668945f0 58 ff7510 668945f2 ff750c }
            // n = 7, score = 200
            //   6a3a                 | push                0x3a
            //   8d4641               | lea                 eax, [esi + 0x41]
            //   668945f0             | mov                 word ptr [ebp - 0x10], ax
            //   58                   | pop                 eax
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   668945f2             | mov                 word ptr [ebp - 0xe], ax
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_1 = { f6c301 742c 6a3a 8d4641 668945f0 58 ff7510 }
            // n = 7, score = 200
            //   f6c301               | test                bl, 1
            //   742c                 | je                  0x2e
            //   6a3a                 | push                0x3a
            //   8d4641               | lea                 eax, [esi + 0x41]
            //   668945f0             | mov                 word ptr [ebp - 0x10], ax
            //   58                   | pop                 eax
            //   ff7510               | push                dword ptr [ebp + 0x10]

        $sequence_2 = { 897df4 85ff 747a 834d08ff }
            // n = 4, score = 200
            //   897df4               | mov                 dword ptr [ebp - 0xc], edi
            //   85ff                 | test                edi, edi
            //   747a                 | je                  0x7c
            //   834d08ff             | or                  dword ptr [ebp + 8], 0xffffffff

        $sequence_3 = { 834d08ff 8d45f8 50 57 8d4508 50 }
            // n = 6, score = 200
            //   834d08ff             | or                  dword ptr [ebp + 8], 0xffffffff
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax
            //   57                   | push                edi
            //   8d4508               | lea                 eax, [ebp + 8]
            //   50                   | push                eax

        $sequence_4 = { 8d4641 668945f0 58 ff7510 668945f2 ff750c 33c0 }
            // n = 7, score = 200
            //   8d4641               | lea                 eax, [esi + 0x41]
            //   668945f0             | mov                 word ptr [ebp - 0x10], ax
            //   58                   | pop                 eax
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   668945f2             | mov                 word ptr [ebp - 0xe], ax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 33c0 668945f4 8d45f0 50 ff15???????? 50 8d45f0 }
            // n = 7, score = 200
            //   33c0                 | xor                 eax, eax
            //   668945f4             | mov                 word ptr [ebp - 0xc], ax
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, [ebp - 0x10]

        $sequence_6 = { 0fb600 48 50 ff36 ff15???????? 85c0 }
            // n = 6, score = 200
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   48                   | dec                 eax
            //   50                   | push                eax
            //   ff36                 | push                dword ptr [esi]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_7 = { c745c800040000 33f6 8d45c4 50 ff15???????? 85c0 750e }
            // n = 7, score = 200
            //   c745c800040000       | mov                 dword ptr [ebp - 0x38], 0x400
            //   33f6                 | xor                 esi, esi
            //   8d45c4               | lea                 eax, [ebp - 0x3c]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   750e                 | jne                 0x10

        $sequence_8 = { 50 ff15???????? 85c0 7466 56 57 bf00020000 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7466                 | je                  0x68
            //   56                   | push                esi
            //   57                   | push                edi
            //   bf00020000           | mov                 edi, 0x200

        $sequence_9 = { 0bf0 57 ff15???????? 5f 8bc6 }
            // n = 5, score = 200
            //   0bf0                 | or                  esi, eax
            //   57                   | push                edi
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   8bc6                 | mov                 eax, esi

    condition:
        7 of them and filesize < 73728
}