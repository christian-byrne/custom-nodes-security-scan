rule win_mmon_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.mmon."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mmon"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d04f5c8474200 8938 68a00f0000 ff30 }
            // n = 4, score = 100
            //   8d04f5c8474200       | lea                 eax, [esi*8 + 0x4247c8]
            //   8938                 | mov                 dword ptr [eax], edi
            //   68a00f0000           | push                0xfa0
            //   ff30                 | push                dword ptr [eax]

        $sequence_1 = { 8d45cc 50 c745ccc8e64100 e8???????? 8b7508 }
            // n = 5, score = 100
            //   8d45cc               | lea                 eax, [ebp - 0x34]
            //   50                   | push                eax
            //   c745ccc8e64100       | mov                 dword ptr [ebp - 0x34], 0x41e6c8
            //   e8????????           |                     
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]

        $sequence_2 = { 3c58 770f 0fbec2 0fb68020094200 }
            // n = 4, score = 100
            //   3c58                 | cmp                 al, 0x58
            //   770f                 | ja                  0x11
            //   0fbec2               | movsx               eax, dl
            //   0fb68020094200       | movzx               eax, byte ptr [eax + 0x420920]

        $sequence_3 = { 6aff 53 6a00 6a00 8bf1 }
            // n = 5, score = 100
            //   6aff                 | push                -1
            //   53                   | push                ebx
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8bf1                 | mov                 esi, ecx

        $sequence_4 = { 891d???????? ff15???????? 85c0 7577 8b15???????? }
            // n = 5, score = 100
            //   891d????????         |                     
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7577                 | jne                 0x79
            //   8b15????????         |                     

        $sequence_5 = { 40 0080af4000a4 af 40 }
            // n = 4, score = 100
            //   40                   | inc                 eax
            //   0080af4000a4         | add                 byte ptr [eax - 0x5bffbf51], al
            //   af                   | scasd               eax, dword ptr es:[edi]
            //   40                   | inc                 eax

        $sequence_6 = { 8b44241c 83c404 50 ff15???????? 6880969800 e8???????? }
            // n = 6, score = 100
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   83c404               | add                 esp, 4
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6880969800           | push                0x989680
            //   e8????????           |                     

        $sequence_7 = { 03f9 8bda 83feff 7fa7 b867666666 f7ef c1fa02 }
            // n = 7, score = 100
            //   03f9                 | add                 edi, ecx
            //   8bda                 | mov                 ebx, edx
            //   83feff               | cmp                 esi, -1
            //   7fa7                 | jg                  0xffffffa9
            //   b867666666           | mov                 eax, 0x66666667
            //   f7ef                 | imul                edi
            //   c1fa02               | sar                 edx, 2

        $sequence_8 = { eb0a c7854cffffff00000000 b802000000 018554ffffff 018548ffffff 03f8 }
            // n = 6, score = 100
            //   eb0a                 | jmp                 0xc
            //   c7854cffffff00000000     | mov    dword ptr [ebp - 0xb4], 0
            //   b802000000           | mov                 eax, 2
            //   018554ffffff         | add                 dword ptr [ebp - 0xac], eax
            //   018548ffffff         | add                 dword ptr [ebp - 0xb8], eax
            //   03f8                 | add                 edi, eax

        $sequence_9 = { 64a300000000 8b7d0c 8b07 68???????? 51 50 }
            // n = 6, score = 100
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   68????????           |                     
            //   51                   | push                ecx
            //   50                   | push                eax

    condition:
        7 of them and filesize < 356352
}