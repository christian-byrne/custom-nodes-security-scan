rule win_lightbunny_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.lightbunny."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lightbunny"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6bc930 8b048520ae4100 0fb6440828 83e040 5d }
            // n = 5, score = 100
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8b048520ae4100       | mov                 eax, dword ptr [eax*4 + 0x41ae20]
            //   0fb6440828           | movzx               eax, byte ptr [eax + ecx + 0x28]
            //   83e040               | and                 eax, 0x40
            //   5d                   | pop                 ebp

        $sequence_1 = { 8bc1 83e13f c1f806 6bc930 8b048520ae4100 f644082801 }
            // n = 6, score = 100
            //   8bc1                 | mov                 eax, ecx
            //   83e13f               | and                 ecx, 0x3f
            //   c1f806               | sar                 eax, 6
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8b048520ae4100       | mov                 eax, dword ptr [eax*4 + 0x41ae20]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1

        $sequence_2 = { 83c404 6a02 ff35???????? ffd3 }
            // n = 4, score = 100
            //   83c404               | add                 esp, 4
            //   6a02                 | push                2
            //   ff35????????         |                     
            //   ffd3                 | call                ebx

        $sequence_3 = { 894708 0fb74602 50 ff15???????? }
            // n = 4, score = 100
            //   894708               | mov                 dword ptr [edi + 8], eax
            //   0fb74602             | movzx               eax, word ptr [esi + 2]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_4 = { ff35???????? ff15???????? c705????????00000000 8b4dfc }
            // n = 4, score = 100
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   c705????????00000000     |     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_5 = { 51 ff15???????? 85c0 740e 8b400c 8b00 }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740e                 | je                  0x10
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8b00                 | mov                 eax, dword ptr [eax]

        $sequence_6 = { 8d3c9d58ab4100 f00fb10f 8bc8 85c9 740b }
            // n = 5, score = 100
            //   8d3c9d58ab4100       | lea                 edi, [ebx*4 + 0x41ab58]
            //   f00fb10f             | lock cmpxchg        dword ptr [edi], ecx
            //   8bc8                 | mov                 ecx, eax
            //   85c9                 | test                ecx, ecx
            //   740b                 | je                  0xd

        $sequence_7 = { 83c404 83f801 0f851dffffff 8b5710 33c9 b8???????? 90 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   83f801               | cmp                 eax, 1
            //   0f851dffffff         | jne                 0xffffff23
            //   8b5710               | mov                 edx, dword ptr [edi + 0x10]
            //   33c9                 | xor                 ecx, ecx
            //   b8????????           |                     
            //   90                   | nop                 

        $sequence_8 = { 6bc030 c1f906 03048d20ae4100 eb02 8bc6 80782900 7522 }
            // n = 7, score = 100
            //   6bc030               | imul                eax, eax, 0x30
            //   c1f906               | sar                 ecx, 6
            //   03048d20ae4100       | add                 eax, dword ptr [ecx*4 + 0x41ae20]
            //   eb02                 | jmp                 4
            //   8bc6                 | mov                 eax, esi
            //   80782900             | cmp                 byte ptr [eax + 0x29], 0
            //   7522                 | jne                 0x24

        $sequence_9 = { 8b75f8 33ff 8b0d???????? 8bc6 8945e4 894de8 }
            // n = 6, score = 100
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   33ff                 | xor                 edi, edi
            //   8b0d????????         |                     
            //   8bc6                 | mov                 eax, esi
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx

    condition:
        7 of them and filesize < 2376704
}