rule win_odinaff_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.odinaff."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.odinaff"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 3d1f040000 7505 bf01000000 }
            // n = 4, score = 200
            //   ff15????????         |                     
            //   3d1f040000           | cmp                 eax, 0x41f
            //   7505                 | jne                 7
            //   bf01000000           | mov                 edi, 1

        $sequence_1 = { 740c 57 6a00 ffd3 50 ff15???????? 6a00 }
            // n = 7, score = 200
            //   740c                 | je                  0xe
            //   57                   | push                edi
            //   6a00                 | push                0
            //   ffd3                 | call                ebx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6a00                 | push                0

        $sequence_2 = { 6a08 33ff 57 57 ff15???????? }
            // n = 5, score = 200
            //   6a08                 | push                8
            //   33ff                 | xor                 edi, edi
            //   57                   | push                edi
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_3 = { 8bd8 ff15???????? 53 6a00 6a00 56 ff15???????? }
            // n = 7, score = 200
            //   8bd8                 | mov                 ebx, eax
            //   ff15????????         |                     
            //   53                   | push                ebx
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   56                   | push                esi
            //   ff15????????         |                     

        $sequence_4 = { 49 81c900ffffff 41 8a8138474000 }
            // n = 4, score = 200
            //   49                   | dec                 ecx
            //   81c900ffffff         | or                  ecx, 0xffffff00
            //   41                   | inc                 ecx
            //   8a8138474000         | mov                 al, byte ptr [ecx + 0x404738]

        $sequence_5 = { 8b1d???????? 83c40c 6820bf0200 56 ffd3 b900000800 2bc8 }
            // n = 7, score = 200
            //   8b1d????????         |                     
            //   83c40c               | add                 esp, 0xc
            //   6820bf0200           | push                0x2bf20
            //   56                   | push                esi
            //   ffd3                 | call                ebx
            //   b900000800           | mov                 ecx, 0x80000
            //   2bc8                 | sub                 ecx, eax

        $sequence_6 = { c745dc01000000 e8???????? 6a44 8d4580 53 50 e8???????? }
            // n = 7, score = 200
            //   c745dc01000000       | mov                 dword ptr [ebp - 0x24], 1
            //   e8????????           |                     
            //   6a44                 | push                0x44
            //   8d4580               | lea                 eax, [ebp - 0x80]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_7 = { 7508 ff15???????? eb7b 6a04 }
            // n = 4, score = 200
            //   7508                 | jne                 0xa
            //   ff15????????         |                     
            //   eb7b                 | jmp                 0x7d
            //   6a04                 | push                4

        $sequence_8 = { e8???????? 8b45f8 83c410 85c0 7408 50 6a00 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c410               | add                 esp, 0x10
            //   85c0                 | test                eax, eax
            //   7408                 | je                  0xa
            //   50                   | push                eax
            //   6a00                 | push                0

        $sequence_9 = { 8b4d0c 6a00 6880000000 6a02 }
            // n = 4, score = 200
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   6a00                 | push                0
            //   6880000000           | push                0x80
            //   6a02                 | push                2

    condition:
        7 of them and filesize < 73728
}