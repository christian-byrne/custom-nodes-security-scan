'''
Author: Nikolaos P.
Purpose: Replicate the encryption algorithm in Chafer

'''
from Crypto.Cipher import ARC4
enc_str = "data goes here"
key = b"\x45\x4D\x92\x51\x48\x99\x74\x51\xC5\x78\x78\xF0\x68\x56\xBE\x46\x69\xAF\x34\x32\x66\x79\x77\xF0\x77\x61\xD8\x53\x32\x85\x42\x48\x8A\x47\x7A\xC1\x34\x5A\x8E\x50\x39\x89\x39\x50\x89\x5A\x34\x8E\x7A\x47\xC1\x48\x42\x8A\x32\x53\x85\x61\x77\xD8\x77\x79\xF0\x32\x34\x66\x69\x46\xAF\x56\x68\xBE\x78\x78\xF0\x51\x74\xC5\x48\x51\x99\x4D\x45\x92"

key_bytes_to_read = len(enc_str)/2
if(key_bytes_to_read<3):
	key_bytes_to_read=3
if(len(key)<key_bytes_to_read):
	key_bytes_to_read = len(key)

rc4key = key[:key_bytes_to_read]
cipher = ARC4.new(rc4key)
msg = cipher.encrypt(enc_str)
print msg.encode('hex')