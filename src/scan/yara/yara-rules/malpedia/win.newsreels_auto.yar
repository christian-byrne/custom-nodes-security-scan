rule win_newsreels_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.newsreels."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.newsreels"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7516 39ac247c030000 7d37 5e 5d 83c8ff }
            // n = 6, score = 100
            //   7516                 | jne                 0x18
            //   39ac247c030000       | cmp                 dword ptr [esp + 0x37c], ebp
            //   7d37                 | jge                 0x39
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_1 = { 53 53 8d8424e0030000 68???????? 50 66899c24a0000000 c784249c00000001010000 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   8d8424e0030000       | lea                 eax, [esp + 0x3e0]
            //   68????????           |                     
            //   50                   | push                eax
            //   66899c24a0000000     | mov                 word ptr [esp + 0xa0], bx
            //   c784249c00000001010000     | mov    dword ptr [esp + 0x9c], 0x101

        $sequence_2 = { ff15???????? e9???????? 6a4d 6a08 68???????? e8???????? 8b35???????? }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   e9????????           |                     
            //   6a4d                 | push                0x4d
            //   6a08                 | push                8
            //   68????????           |                     
            //   e8????????           |                     
            //   8b35????????         |                     

        $sequence_3 = { 6a4d f2ae f7d1 49 }
            // n = 4, score = 100
            //   6a4d                 | push                0x4d
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx

        $sequence_4 = { 8d542460 8d4c2454 83c448 8b02 8b11 3bc2 }
            // n = 6, score = 100
            //   8d542460             | lea                 edx, [esp + 0x60]
            //   8d4c2454             | lea                 ecx, [esp + 0x54]
            //   83c448               | add                 esp, 0x48
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   3bc2                 | cmp                 eax, edx

        $sequence_5 = { 83c408 85db 750a 5e 5d }
            // n = 5, score = 100
            //   83c408               | add                 esp, 8
            //   85db                 | test                ebx, ebx
            //   750a                 | jne                 0xc
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_6 = { 33f6 e8???????? 8bd8 83c408 85db 7516 }
            // n = 6, score = 100
            //   33f6                 | xor                 esi, esi
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   83c408               | add                 esp, 8
            //   85db                 | test                ebx, ebx
            //   7516                 | jne                 0x18

        $sequence_7 = { 51 e8???????? 8b742430 8b542431 8b442432 81e6ff000000 8b4c2433 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   8b742430             | mov                 esi, dword ptr [esp + 0x30]
            //   8b542431             | mov                 edx, dword ptr [esp + 0x31]
            //   8b442432             | mov                 eax, dword ptr [esp + 0x32]
            //   81e6ff000000         | and                 esi, 0xff
            //   8b4c2433             | mov                 ecx, dword ptr [esp + 0x33]

        $sequence_8 = { 8b9c24e0110000 8808 8b15???????? 8bcb 8bc1 }
            // n = 5, score = 100
            //   8b9c24e0110000       | mov                 ebx, dword ptr [esp + 0x11e0]
            //   8808                 | mov                 byte ptr [eax], cl
            //   8b15????????         |                     
            //   8bcb                 | mov                 ecx, ebx
            //   8bc1                 | mov                 eax, ecx

        $sequence_9 = { 51 6a09 6a08 52 66894808 e8???????? }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   6a09                 | push                9
            //   6a08                 | push                8
            //   52                   | push                edx
            //   66894808             | mov                 word ptr [eax + 8], cx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 65536
}