rule win_underminer_ek_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.underminer_ek."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.underminer_ek"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68d040fa7e 687853fa7e ff742418 ffd0 85c0 }
            // n = 5, score = 100
            //   68d040fa7e           | push                0x7efa40d0
            //   687853fa7e           | push                0x7efa5378
            //   ff742418             | push                dword ptr [esp + 0x18]
            //   ffd0                 | call                eax
            //   85c0                 | test                eax, eax

        $sequence_1 = { 684c52fa7e 53 ff15???????? 8bf8 85ff 7476 }
            // n = 6, score = 100
            //   684c52fa7e           | push                0x7efa524c
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   7476                 | je                  0x78

        $sequence_2 = { 1bc0 23c1 83c008 5d c3 8b04c5e48f4200 5d }
            // n = 7, score = 100
            //   1bc0                 | sbb                 eax, eax
            //   23c1                 | and                 eax, ecx
            //   83c008               | add                 eax, 8
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b04c5e48f4200       | mov                 eax, dword ptr [eax*8 + 0x428fe4]
            //   5d                   | pop                 ebp

        $sequence_3 = { 884d17 0f8482000000 f6451701 7445 8b4d10 }
            // n = 5, score = 100
            //   884d17               | mov                 byte ptr [ebp + 0x17], cl
            //   0f8482000000         | je                  0x88
            //   f6451701             | test                byte ptr [ebp + 0x17], 1
            //   7445                 | je                  0x47
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]

        $sequence_4 = { 68e452fa7e 53 e8???????? 68ef030000 8d4311 68d233fa7e 50 }
            // n = 7, score = 100
            //   68e452fa7e           | push                0x7efa52e4
            //   53                   | push                ebx
            //   e8????????           |                     
            //   68ef030000           | push                0x3ef
            //   8d4311               | lea                 eax, [ebx + 0x11]
            //   68d233fa7e           | push                0x7efa33d2
            //   50                   | push                eax

        $sequence_5 = { 51 e8???????? 83c408 8b55dc c745f000000000 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b55dc               | mov                 edx, dword ptr [ebp - 0x24]
            //   c745f000000000       | mov                 dword ptr [ebp - 0x10], 0

        $sequence_6 = { 8b49fc 83c223 2bc1 83c0fc 83f81f 0f87b0130000 52 }
            // n = 7, score = 100
            //   8b49fc               | mov                 ecx, dword ptr [ecx - 4]
            //   83c223               | add                 edx, 0x23
            //   2bc1                 | sub                 eax, ecx
            //   83c0fc               | add                 eax, -4
            //   83f81f               | cmp                 eax, 0x1f
            //   0f87b0130000         | ja                  0x13b6
            //   52                   | push                edx

        $sequence_7 = { f30f7e4110 660fd645f0 c7411000000000 c741140f000000 c60100 837df410 0f4345e0 }
            // n = 7, score = 100
            //   f30f7e4110           | movq                xmm0, qword ptr [ecx + 0x10]
            //   660fd645f0           | movq                qword ptr [ebp - 0x10], xmm0
            //   c7411000000000       | mov                 dword ptr [ecx + 0x10], 0
            //   c741140f000000       | mov                 dword ptr [ecx + 0x14], 0xf
            //   c60100               | mov                 byte ptr [ecx], 0
            //   837df410             | cmp                 dword ptr [ebp - 0xc], 0x10
            //   0f4345e0             | cmovae              eax, dword ptr [ebp - 0x20]

        $sequence_8 = { 8b4d0c c60102 ebe9 3cbf 770b }
            // n = 5, score = 100
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   c60102               | mov                 byte ptr [ecx], 2
            //   ebe9                 | jmp                 0xffffffeb
            //   3cbf                 | cmp                 al, 0xbf
            //   770b                 | ja                  0xd

        $sequence_9 = { 0fb6d1 f604557aa3420001 740f 8b45f0 8b8094000000 }
            // n = 5, score = 100
            //   0fb6d1               | movzx               edx, cl
            //   f604557aa3420001     | test                byte ptr [edx*2 + 0x42a37a], 1
            //   740f                 | je                  0x11
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b8094000000         | mov                 eax, dword ptr [eax + 0x94]

        $sequence_10 = { 8bdf 46 ff4d0c c1e010 0fbf16 03d8 8d841a00800000 }
            // n = 7, score = 100
            //   8bdf                 | mov                 ebx, edi
            //   46                   | inc                 esi
            //   ff4d0c               | dec                 dword ptr [ebp + 0xc]
            //   c1e010               | shl                 eax, 0x10
            //   0fbf16               | movsx               edx, word ptr [esi]
            //   03d8                 | add                 ebx, eax
            //   8d841a00800000       | lea                 eax, [edx + ebx + 0x8000]

        $sequence_11 = { 8b34bd6cc64200 eb07 8b34bd38c64200 53 46 }
            // n = 5, score = 100
            //   8b34bd6cc64200       | mov                 esi, dword ptr [edi*4 + 0x42c66c]
            //   eb07                 | jmp                 9
            //   8b34bd38c64200       | mov                 esi, dword ptr [edi*4 + 0x42c638]
            //   53                   | push                ebx
            //   46                   | inc                 esi

        $sequence_12 = { 89451c 7548 803ee8 7559 8b4601 }
            // n = 5, score = 100
            //   89451c               | mov                 dword ptr [ebp + 0x1c], eax
            //   7548                 | jne                 0x4a
            //   803ee8               | cmp                 byte ptr [esi], 0xe8
            //   7559                 | jne                 0x5b
            //   8b4601               | mov                 eax, dword ptr [esi + 1]

        $sequence_13 = { 6a00 51 50 57 ff15???????? ff75d8 }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff15????????         |                     
            //   ff75d8               | push                dword ptr [ebp - 0x28]

        $sequence_14 = { 49 807dff00 8955ec 894df4 8b0485582c4300 }
            // n = 5, score = 100
            //   49                   | dec                 ecx
            //   807dff00             | cmp                 byte ptr [ebp - 1], 0
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8b0485582c4300       | mov                 eax, dword ptr [eax*4 + 0x432c58]

        $sequence_15 = { 5b c9 c3 ff742408 8b442408 ff10 c3 }
            // n = 7, score = 100
            //   5b                   | pop                 ebx
            //   c9                   | leave               
            //   c3                   | ret                 
            //   ff742408             | push                dword ptr [esp + 8]
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   ff10                 | call                dword ptr [eax]
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 466944
}