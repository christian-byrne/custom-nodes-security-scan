rule win_saint_bot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.saint_bot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.saint_bot"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85f6 7432 837d10ff 7405 3b5d10 744f 6a04 }
            // n = 7, score = 100
            //   85f6                 | test                esi, esi
            //   7432                 | je                  0x34
            //   837d10ff             | cmp                 dword ptr [ebp + 0x10], -1
            //   7405                 | je                  7
            //   3b5d10               | cmp                 ebx, dword ptr [ebp + 0x10]
            //   744f                 | je                  0x51
            //   6a04                 | push                4

        $sequence_1 = { 894df8 894dec ff15???????? 8d45ec 50 8d45f8 50 }
            // n = 7, score = 100
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   ff15????????         |                     
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax

        $sequence_2 = { 668945e8 83c002 668945ea 8d45e0 8945d0 }
            // n = 5, score = 100
            //   668945e8             | mov                 word ptr [ebp - 0x18], ax
            //   83c002               | add                 eax, 2
            //   668945ea             | mov                 word ptr [ebp - 0x16], ax
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax

        $sequence_3 = { c3 55 8bec 8b550c 53 0fb71a 6685db }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   53                   | push                ebx
            //   0fb71a               | movzx               ebx, word ptr [edx]
            //   6685db               | test                bx, bx

        $sequence_4 = { 6a78 68f0000000 b800000080 50 50 680000cf00 }
            // n = 6, score = 100
            //   6a78                 | push                0x78
            //   68f0000000           | push                0xf0
            //   b800000080           | mov                 eax, 0x80000000
            //   50                   | push                eax
            //   50                   | push                eax
            //   680000cf00           | push                0xcf0000

        $sequence_5 = { 85c0 0f84c7000000 85ff 7404 c6043800 }
            // n = 5, score = 100
            //   85c0                 | test                eax, eax
            //   0f84c7000000         | je                  0xcd
            //   85ff                 | test                edi, edi
            //   7404                 | je                  6
            //   c6043800             | mov                 byte ptr [eax + edi], 0

        $sequence_6 = { 58 6a63 668945cc 58 6a30 }
            // n = 5, score = 100
            //   58                   | pop                 eax
            //   6a63                 | push                0x63
            //   668945cc             | mov                 word ptr [ebp - 0x34], ax
            //   58                   | pop                 eax
            //   6a30                 | push                0x30

        $sequence_7 = { 56 57 e8???????? ff75f0 56 57 e8???????? }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   e8????????           |                     
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   56                   | push                esi
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_8 = { 57 ff15???????? 56 6880000000 6a02 56 }
            // n = 6, score = 100
            //   57                   | push                edi
            //   ff15????????         |                     
            //   56                   | push                esi
            //   6880000000           | push                0x80
            //   6a02                 | push                2
            //   56                   | push                esi

        $sequence_9 = { 8bf0 ff15???????? 6a00 6a06 56 6a04 50 }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   6a06                 | push                6
            //   56                   | push                esi
            //   6a04                 | push                4
            //   50                   | push                eax

    condition:
        7 of them and filesize < 93184
}