rule win_simda_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.simda."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.simda"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 c745fc04010000 a4 e8???????? }
            // n = 4, score = 700
            //   50                   | push                eax
            //   c745fc04010000       | mov                 dword ptr [ebp - 4], 0x104
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   e8????????           |                     

        $sequence_1 = { 3bce 8945f4 1bc0 40 57 895dfc }
            // n = 6, score = 700
            //   3bce                 | cmp                 ecx, esi
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   1bc0                 | sbb                 eax, eax
            //   40                   | inc                 eax
            //   57                   | push                edi
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx

        $sequence_2 = { c7049f00000000 75f6 8b0f 894d08 }
            // n = 4, score = 700
            //   c7049f00000000       | mov                 dword ptr [edi + ebx*4], 0
            //   75f6                 | jne                 0xfffffff8
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   894d08               | mov                 dword ptr [ebp + 8], ecx

        $sequence_3 = { 760d 8b7d08 83c704 8d4eff 33c0 }
            // n = 5, score = 700
            //   760d                 | jbe                 0xf
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   83c704               | add                 edi, 4
            //   8d4eff               | lea                 ecx, [esi - 1]
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { c1e110 0b4df4 03d6 83ceff 2bca }
            // n = 5, score = 700
            //   c1e110               | shl                 ecx, 0x10
            //   0b4df4               | or                  ecx, dword ptr [ebp - 0xc]
            //   03d6                 | add                 edx, esi
            //   83ceff               | or                  esi, 0xffffffff
            //   2bca                 | sub                 ecx, edx

        $sequence_5 = { 8b0d???????? 8945d4 a1???????? 8955dc 0fb615???????? }
            // n = 5, score = 700
            //   8b0d????????         |                     
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   a1????????           |                     
            //   8955dc               | mov                 dword ptr [ebp - 0x24], edx
            //   0fb615????????       |                     

        $sequence_6 = { c1eb10 3bce 7601 4b c1ef10 }
            // n = 5, score = 700
            //   c1eb10               | shr                 ebx, 0x10
            //   3bce                 | cmp                 ecx, esi
            //   7601                 | jbe                 3
            //   4b                   | dec                 ebx
            //   c1ef10               | shr                 edi, 0x10

        $sequence_7 = { 83c408 85c0 74e4 6a0a 6a00 56 c60000 }
            // n = 7, score = 700
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   74e4                 | je                  0xffffffe6
            //   6a0a                 | push                0xa
            //   6a00                 | push                0
            //   56                   | push                esi
            //   c60000               | mov                 byte ptr [eax], 0

        $sequence_8 = { 8bd1 c1ea10 8955ec 8bf8 }
            // n = 4, score = 700
            //   8bd1                 | mov                 edx, ecx
            //   c1ea10               | shr                 edx, 0x10
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   8bf8                 | mov                 edi, eax

        $sequence_9 = { 41 eb08 83c102 eb03 83c103 }
            // n = 5, score = 700
            //   41                   | inc                 ecx
            //   eb08                 | jmp                 0xa
            //   83c102               | add                 ecx, 2
            //   eb03                 | jmp                 5
            //   83c103               | add                 ecx, 3

    condition:
        7 of them and filesize < 1581056
}