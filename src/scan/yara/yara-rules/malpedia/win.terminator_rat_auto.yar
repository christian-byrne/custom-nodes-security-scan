rule win_terminator_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.terminator_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.terminator_rat"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffb519010000 8947fc 8b47f4 8b4008 894708 e8???????? 8b47fc }
            // n = 7, score = 500
            //   ffb519010000         | push                dword ptr [ebp + 0x119]
            //   8947fc               | mov                 dword ptr [edi - 4], eax
            //   8b47f4               | mov                 eax, dword ptr [edi - 0xc]
            //   8b4008               | mov                 eax, dword ptr [eax + 8]
            //   894708               | mov                 dword ptr [edi + 8], eax
            //   e8????????           |                     
            //   8b47fc               | mov                 eax, dword ptr [edi - 4]

        $sequence_1 = { c70020000000 8b852d010000 2b08 894804 }
            // n = 4, score = 500
            //   c70020000000         | mov                 dword ptr [eax], 0x20
            //   8b852d010000         | mov                 eax, dword ptr [ebp + 0x12d]
            //   2b08                 | sub                 ecx, dword ptr [eax]
            //   894804               | mov                 dword ptr [eax + 4], ecx

        $sequence_2 = { 33db 395e0c 752f 6a40 6800100000 6800180000 }
            // n = 6, score = 500
            //   33db                 | xor                 ebx, ebx
            //   395e0c               | cmp                 dword ptr [esi + 0xc], ebx
            //   752f                 | jne                 0x31
            //   6a40                 | push                0x40
            //   6800100000           | push                0x1000
            //   6800180000           | push                0x1800

        $sequence_3 = { 26a130000000 07 8b400c 8b701c }
            // n = 4, score = 500
            //   26a130000000         | mov                 eax, dword ptr es:[0x30]
            //   07                   | pop                 es
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8b701c               | mov                 esi, dword ptr [eax + 0x1c]

        $sequence_4 = { 50 ffb525010000 ff95e1000000 85c0 }
            // n = 4, score = 500
            //   50                   | push                eax
            //   ffb525010000         | push                dword ptr [ebp + 0x125]
            //   ff95e1000000         | call                dword ptr [ebp + 0xe1]
            //   85c0                 | test                eax, eax

        $sequence_5 = { eb31 ff9509010000 3d4c270000 750e }
            // n = 4, score = 500
            //   eb31                 | jmp                 0x33
            //   ff9509010000         | call                dword ptr [ebp + 0x109]
            //   3d4c270000           | cmp                 eax, 0x274c
            //   750e                 | jne                 0x10

        $sequence_6 = { 57 8bfc 81ec04040000 53 56 33db }
            // n = 6, score = 500
            //   57                   | push                edi
            //   8bfc                 | mov                 edi, esp
            //   81ec04040000         | sub                 esp, 0x404
            //   53                   | push                ebx
            //   56                   | push                esi
            //   33db                 | xor                 ebx, ebx

        $sequence_7 = { 8b4b0c ac 3459 c0c803 3448 c0c803 }
            // n = 6, score = 500
            //   8b4b0c               | mov                 ecx, dword ptr [ebx + 0xc]
            //   ac                   | lodsb               al, byte ptr [esi]
            //   3459                 | xor                 al, 0x59
            //   c0c803               | ror                 al, 3
            //   3448                 | xor                 al, 0x48
            //   c0c803               | ror                 al, 3

        $sequence_8 = { ffb519010000 8947fc 8b47f4 8b4008 }
            // n = 4, score = 500
            //   ffb519010000         | push                dword ptr [ebp + 0x119]
            //   8947fc               | mov                 dword ptr [edi - 4], eax
            //   8b47f4               | mov                 eax, dword ptr [edi - 0xc]
            //   8b4008               | mov                 eax, dword ptr [eax + 8]

        $sequence_9 = { 60 33c0 8b4f0c 8b7f08 }
            // n = 4, score = 500
            //   60                   | pushal              
            //   33c0                 | xor                 eax, eax
            //   8b4f0c               | mov                 ecx, dword ptr [edi + 0xc]
            //   8b7f08               | mov                 edi, dword ptr [edi + 8]

    condition:
        7 of them and filesize < 73728
}