rule win_wndtest_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.wndtest."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.wndtest"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d1439 8a0410 320419 41 }
            // n = 4, score = 400
            //   8d1439               | lea                 edx, [ecx + edi]
            //   8a0410               | mov                 al, byte ptr [eax + edx]
            //   320419               | xor                 al, byte ptr [ecx + ebx]
            //   41                   | inc                 ecx

        $sequence_1 = { 56 ffd7 8b0d???????? a3???????? a1???????? }
            // n = 5, score = 400
            //   56                   | push                esi
            //   ffd7                 | call                edi
            //   8b0d????????         |                     
            //   a3????????           |                     
            //   a1????????           |                     

        $sequence_2 = { 56 0fbe7001 83f60d 57 }
            // n = 4, score = 400
            //   56                   | push                esi
            //   0fbe7001             | movsx               esi, byte ptr [eax + 1]
            //   83f60d               | xor                 esi, 0xd
            //   57                   | push                edi

        $sequence_3 = { 880c3e 5f 5e 8be5 }
            // n = 4, score = 400
            //   880c3e               | mov                 byte ptr [esi + edi], cl
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp

        $sequence_4 = { 75ea 8bcb 0fb6d2 c1e918 33ca c1e308 }
            // n = 6, score = 400
            //   75ea                 | jne                 0xffffffec
            //   8bcb                 | mov                 ecx, ebx
            //   0fb6d2               | movzx               edx, dl
            //   c1e918               | shr                 ecx, 0x18
            //   33ca                 | xor                 ecx, edx
            //   c1e308               | shl                 ebx, 8

        $sequence_5 = { a3???????? a1???????? 50 51 e8???????? 83c408 50 }
            // n = 7, score = 400
            //   a3????????           |                     
            //   a1????????           |                     
            //   50                   | push                eax
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   50                   | push                eax

        $sequence_6 = { 2bc2 40 50 e8???????? 8bd0 }
            // n = 5, score = 400
            //   2bc2                 | sub                 eax, edx
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bd0                 | mov                 edx, eax

        $sequence_7 = { ffd7 8b15???????? a3???????? a1???????? 52 50 e8???????? }
            // n = 7, score = 400
            //   ffd7                 | call                edi
            //   8b15????????         |                     
            //   a3????????           |                     
            //   a1????????           |                     
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_8 = { 83c404 33c9 8d460a ba02000000 f7e2 }
            // n = 5, score = 400
            //   83c404               | add                 esp, 4
            //   33c9                 | xor                 ecx, ecx
            //   8d460a               | lea                 eax, [esi + 0xa]
            //   ba02000000           | mov                 edx, 2
            //   f7e2                 | mul                 edx

        $sequence_9 = { 8b0d???????? 894808 e9???????? 8d46fe 8bff 668b4802 }
            // n = 6, score = 400
            //   8b0d????????         |                     
            //   894808               | mov                 dword ptr [eax + 8], ecx
            //   e9????????           |                     
            //   8d46fe               | lea                 eax, [esi - 2]
            //   8bff                 | mov                 edi, edi
            //   668b4802             | mov                 cx, word ptr [eax + 2]

    condition:
        7 of them and filesize < 901120
}