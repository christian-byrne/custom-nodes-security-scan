rule win_caddywiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.caddywiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.caddywiper"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8345b404 66837dac00 75c4 c745a800000000 }
            // n = 4, score = 100
            //   8345b404             | add                 dword ptr [ebp - 0x4c], 4
            //   66837dac00           | cmp                 word ptr [ebp - 0x54], 0
            //   75c4                 | jne                 0xffffffc6
            //   c745a800000000       | mov                 dword ptr [ebp - 0x58], 0

        $sequence_1 = { c68592feffff64 c68593feffff00 c68594feffff76 c68595feffff00 c68596feffff61 c68597feffff00 }
            // n = 6, score = 100
            //   c68592feffff64       | mov                 byte ptr [ebp - 0x16e], 0x64
            //   c68593feffff00       | mov                 byte ptr [ebp - 0x16d], 0
            //   c68594feffff76       | mov                 byte ptr [ebp - 0x16c], 0x76
            //   c68595feffff00       | mov                 byte ptr [ebp - 0x16b], 0
            //   c68596feffff61       | mov                 byte ptr [ebp - 0x16a], 0x61
            //   c68597feffff00       | mov                 byte ptr [ebp - 0x169], 0

        $sequence_2 = { 51 e8???????? 83c408 8985b0fbffff c785f4f1ffff00000000 c68588fbffff4c }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8985b0fbffff         | mov                 dword ptr [ebp - 0x450], eax
            //   c785f4f1ffff00000000     | mov    dword ptr [ebp - 0xe0c], 0
            //   c68588fbffff4c       | mov                 byte ptr [ebp - 0x478], 0x4c

        $sequence_3 = { e9???????? 6a00 8b95acf1ffff 52 ff9564f7ffff }
            // n = 5, score = 100
            //   e9????????           |                     
            //   6a00                 | push                0
            //   8b95acf1ffff         | mov                 edx, dword ptr [ebp - 0xe54]
            //   52                   | push                edx
            //   ff9564f7ffff         | call                dword ptr [ebp - 0x89c]

        $sequence_4 = { 8b4dfc 8b5508 c7048a00000000 ebd7 }
            // n = 4, score = 100
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   c7048a00000000       | mov                 dword ptr [edx + ecx*4], 0
            //   ebd7                 | jmp                 0xffffffd9

        $sequence_5 = { c645b900 c645ba39 c645bb00 c645bc00 c645bd00 8d4d98 898df4f7ffff }
            // n = 7, score = 100
            //   c645b900             | mov                 byte ptr [ebp - 0x47], 0
            //   c645ba39             | mov                 byte ptr [ebp - 0x46], 0x39
            //   c645bb00             | mov                 byte ptr [ebp - 0x45], 0
            //   c645bc00             | mov                 byte ptr [ebp - 0x44], 0
            //   c645bd00             | mov                 byte ptr [ebp - 0x43], 0
            //   8d4d98               | lea                 ecx, [ebp - 0x68]
            //   898df4f7ffff         | mov                 dword ptr [ebp - 0x80c], ecx

        $sequence_6 = { c685a3feffff00 c685a4feffff6c c685a5feffff00 c685a6feffff6c c685a7feffff00 }
            // n = 5, score = 100
            //   c685a3feffff00       | mov                 byte ptr [ebp - 0x15d], 0
            //   c685a4feffff6c       | mov                 byte ptr [ebp - 0x15c], 0x6c
            //   c685a5feffff00       | mov                 byte ptr [ebp - 0x15b], 0
            //   c685a6feffff6c       | mov                 byte ptr [ebp - 0x15a], 0x6c
            //   c685a7feffff00       | mov                 byte ptr [ebp - 0x159], 0

        $sequence_7 = { c6459264 c6459300 8d458c 50 8d8d90feffff }
            // n = 5, score = 100
            //   c6459264             | mov                 byte ptr [ebp - 0x6e], 0x64
            //   c6459300             | mov                 byte ptr [ebp - 0x6d], 0
            //   8d458c               | lea                 eax, [ebp - 0x74]
            //   50                   | push                eax
            //   8d8d90feffff         | lea                 ecx, [ebp - 0x170]

        $sequence_8 = { 8985fcf7ffff 8d55c0 52 8d45dc }
            // n = 4, score = 100
            //   8985fcf7ffff         | mov                 dword ptr [ebp - 0x804], eax
            //   8d55c0               | lea                 edx, [ebp - 0x40]
            //   52                   | push                edx
            //   8d45dc               | lea                 eax, [ebp - 0x24]

        $sequence_9 = { 7407 8b4598 50 ff55fc 8b4594 8be5 }
            // n = 6, score = 100
            //   7407                 | je                  9
            //   8b4598               | mov                 eax, dword ptr [ebp - 0x68]
            //   50                   | push                eax
            //   ff55fc               | call                dword ptr [ebp - 4]
            //   8b4594               | mov                 eax, dword ptr [ebp - 0x6c]
            //   8be5                 | mov                 esp, ebp

    condition:
        7 of them and filesize < 33792
}