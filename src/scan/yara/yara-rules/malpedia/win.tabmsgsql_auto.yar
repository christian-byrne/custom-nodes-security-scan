rule win_tabmsgsql_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.tabmsgsql."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tabmsgsql"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33c0 f2ae f7d1 2bf9 8bd1 8bf7 8bbc24a4010000 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8bd1                 | mov                 edx, ecx
            //   8bf7                 | mov                 esi, edi
            //   8bbc24a4010000       | mov                 edi, dword ptr [esp + 0x1a4]

        $sequence_1 = { 8a443901 c0fb02 8a80c8244100 c0e004 02c3 880416 }
            // n = 6, score = 100
            //   8a443901             | mov                 al, byte ptr [ecx + edi + 1]
            //   c0fb02               | sar                 bl, 2
            //   8a80c8244100         | mov                 al, byte ptr [eax + 0x4124c8]
            //   c0e004               | shl                 al, 4
            //   02c3                 | add                 al, bl
            //   880416               | mov                 byte ptr [esi + edx], al

        $sequence_2 = { 8882c8254100 48 42 83f841 }
            // n = 4, score = 100
            //   8882c8254100         | mov                 byte ptr [edx + 0x4125c8], al
            //   48                   | dec                 eax
            //   42                   | inc                 edx
            //   83f841               | cmp                 eax, 0x41

        $sequence_3 = { 8bf8 75ce 8b6c2414 8b542418 b8ad8bdb68 }
            // n = 5, score = 100
            //   8bf8                 | mov                 edi, eax
            //   75ce                 | jne                 0xffffffd0
            //   8b6c2414             | mov                 ebp, dword ptr [esp + 0x14]
            //   8b542418             | mov                 edx, dword ptr [esp + 0x18]
            //   b8ad8bdb68           | mov                 eax, 0x68db8bad

        $sequence_4 = { 6804010000 8b842478030000 52 c744242844000000 c744245401010000 8b08 8b400c }
            // n = 7, score = 100
            //   6804010000           | push                0x104
            //   8b842478030000       | mov                 eax, dword ptr [esp + 0x378]
            //   52                   | push                edx
            //   c744242844000000     | mov                 dword ptr [esp + 0x28], 0x44
            //   c744245401010000     | mov                 dword ptr [esp + 0x54], 0x101
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]

        $sequence_5 = { f2ae f7d1 49 8d85c8f7ffff }
            // n = 4, score = 100
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8d85c8f7ffff         | lea                 eax, [ebp - 0x838]

        $sequence_6 = { 0f8eb2000000 8b7c2414 0fbe05???????? 33db 8a1c39 3bd8 }
            // n = 6, score = 100
            //   0f8eb2000000         | jle                 0xb8
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]
            //   0fbe05????????       |                     
            //   33db                 | xor                 ebx, ebx
            //   8a1c39               | mov                 bl, byte ptr [ecx + edi]
            //   3bd8                 | cmp                 ebx, eax

        $sequence_7 = { ff15???????? b940000000 33c0 bf???????? 68???????? f3ab 68???????? }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   bf????????           |                     
            //   68????????           |                     
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   68????????           |                     

        $sequence_8 = { a1???????? 50 ff15???????? b940000000 33c0 bf???????? }
            // n = 6, score = 100
            //   a1????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   bf????????           |                     

        $sequence_9 = { 33c0 8a443901 c0fb02 8a80c8244100 c0e004 02c3 880416 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   8a443901             | mov                 al, byte ptr [ecx + edi + 1]
            //   c0fb02               | sar                 bl, 2
            //   8a80c8244100         | mov                 al, byte ptr [eax + 0x4124c8]
            //   c0e004               | shl                 al, 4
            //   02c3                 | add                 al, bl
            //   880416               | mov                 byte ptr [esi + edx], al

    condition:
        7 of them and filesize < 163840
}