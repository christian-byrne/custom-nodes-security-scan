rule win_remcom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.remcom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remcom"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8be5 5d c3 53 56 8d95f8feffff }
            // n = 6, score = 100
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8d95f8feffff         | lea                 edx, [ebp - 0x108]

        $sequence_1 = { 83c8ff 89463c 894638 894640 8b8708110000 50 8d9f0c110000 }
            // n = 7, score = 100
            //   83c8ff               | or                  eax, 0xffffffff
            //   89463c               | mov                 dword ptr [esi + 0x3c], eax
            //   894638               | mov                 dword ptr [esi + 0x38], eax
            //   894640               | mov                 dword ptr [esi + 0x40], eax
            //   8b8708110000         | mov                 eax, dword ptr [edi + 0x1108]
            //   50                   | push                eax
            //   8d9f0c110000         | lea                 ebx, [edi + 0x110c]

        $sequence_2 = { e8???????? a1???????? 33c5 8945fc 56 8b7508 68???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   68????????           |                     

        $sequence_3 = { 50 8d9f0c110000 53 68???????? 8d55e0 68???????? }
            // n = 6, score = 100
            //   50                   | push                eax
            //   8d9f0c110000         | lea                 ebx, [edi + 0x110c]
            //   53                   | push                ebx
            //   68????????           |                     
            //   8d55e0               | lea                 edx, [ebp - 0x20]
            //   68????????           |                     

        $sequence_4 = { 008891400023 d18a0688078a 46 018847018a46 }
            // n = 4, score = 100
            //   008891400023         | add                 byte ptr [eax + 0x23004091], cl
            //   d18a0688078a         | ror                 dword ptr [edx - 0x75f877fa], 1
            //   46                   | inc                 esi
            //   018847018a46         | add                 dword ptr [eax + 0x468a0147], ecx

        $sequence_5 = { 52 ffd3 85c0 7507 ffd7 8945f0 eb78 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   7507                 | jne                 9
            //   ffd7                 | call                edi
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   eb78                 | jmp                 0x7a

        $sequence_6 = { 6a00 6a01 8d4de0 51 ffd3 8d45f4 50 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   8d4de0               | lea                 ecx, [ebp - 0x20]
            //   51                   | push                ecx
            //   ffd3                 | call                ebx
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax

        $sequence_7 = { 8d8e00100000 f7d8 1bc0 23c1 8d8de4feffff }
            // n = 5, score = 100
            //   8d8e00100000         | lea                 ecx, [esi + 0x1000]
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   23c1                 | and                 eax, ecx
            //   8d8de4feffff         | lea                 ecx, [ebp - 0x11c]

        $sequence_8 = { 8b7508 8d34f528e54000 391e 7404 8bc7 }
            // n = 5, score = 100
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8d34f528e54000       | lea                 esi, [esi*8 + 0x40e528]
            //   391e                 | cmp                 dword ptr [esi], ebx
            //   7404                 | je                  6
            //   8bc7                 | mov                 eax, edi

        $sequence_9 = { 6a00 51 ffd7 8b4638 6a00 50 ffd7 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   ffd7                 | call                edi
            //   8b4638               | mov                 eax, dword ptr [esi + 0x38]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   ffd7                 | call                edi

    condition:
        7 of them and filesize < 155648
}