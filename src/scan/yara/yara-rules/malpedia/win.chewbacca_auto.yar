rule win_chewbacca_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.chewbacca."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.chewbacca"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? c645f401 8a45f4 5b c9 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   c645f401             | mov                 byte ptr [ebp - 0xc], 1
            //   8a45f4               | mov                 al, byte ptr [ebp - 0xc]
            //   5b                   | pop                 ebx
            //   c9                   | leave               

        $sequence_1 = { e8???????? c645c800 8b45cc 8b10 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   c645c800             | mov                 byte ptr [ebp - 0x38], 0
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   8b10                 | mov                 edx, dword ptr [eax]

        $sequence_2 = { e8???????? c645f000 8b45f4 8b80b4010000 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   c645f000             | mov                 byte ptr [ebp - 0x10], 0
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   8b80b4010000         | mov                 eax, dword ptr [eax + 0x1b4]

        $sequence_3 = { e8???????? c645a400 c645f400 806df401 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   c645a400             | mov                 byte ptr [ebp - 0x5c], 0
            //   c645f400             | mov                 byte ptr [ebp - 0xc], 0
            //   806df401             | sub                 byte ptr [ebp - 0xc], 1

        $sequence_4 = { e8???????? c645d001 8a45d0 5f }
            // n = 4, score = 100
            //   e8????????           |                     
            //   c645d001             | mov                 byte ptr [ebp - 0x30], 1
            //   8a45d0               | mov                 al, byte ptr [ebp - 0x30]
            //   5f                   | pop                 edi

        $sequence_5 = { e8???????? c645ec01 e9???????? 8b55dc }
            // n = 4, score = 100
            //   e8????????           |                     
            //   c645ec01             | mov                 byte ptr [ebp - 0x14], 1
            //   e9????????           |                     
            //   8b55dc               | mov                 edx, dword ptr [ebp - 0x24]

        $sequence_6 = { e8???????? c645f401 e8???????? 8d4590 e8???????? 58 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   c645f401             | mov                 byte ptr [ebp - 0xc], 1
            //   e8????????           |                     
            //   8d4590               | lea                 eax, [ebp - 0x70]
            //   e8????????           |                     
            //   58                   | pop                 eax

        $sequence_7 = { e8???????? c645a400 6a00 8b45f8 8b00 898554ffffff }
            // n = 6, score = 100
            //   e8????????           |                     
            //   c645a400             | mov                 byte ptr [ebp - 0x5c], 0
            //   6a00                 | push                0
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   898554ffffff         | mov                 dword ptr [ebp - 0xac], eax

    condition:
        7 of them and filesize < 9764864
}