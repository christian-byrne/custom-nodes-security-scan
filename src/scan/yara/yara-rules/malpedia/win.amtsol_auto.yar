rule win_amtsol_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.amtsol."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.amtsol"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33c8 234df0 8945fc 8b45f8 33cb 034e34 6a05 }
            // n = 7, score = 100
            //   33c8                 | xor                 ecx, eax
            //   234df0               | and                 ecx, dword ptr [ebp - 0x10]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   33cb                 | xor                 ecx, ebx
            //   034e34               | add                 ecx, dword ptr [esi + 0x34]
            //   6a05                 | push                5

        $sequence_1 = { 53 ff7580 ff7594 ff36 }
            // n = 4, score = 100
            //   53                   | push                ebx
            //   ff7580               | push                dword ptr [ebp - 0x80]
            //   ff7594               | push                dword ptr [ebp - 0x6c]
            //   ff36                 | push                dword ptr [esi]

        $sequence_2 = { 885d6f ff75d4 8d4510 50 8d4568 50 }
            // n = 6, score = 100
            //   885d6f               | mov                 byte ptr [ebp + 0x6f], bl
            //   ff75d4               | push                dword ptr [ebp - 0x2c]
            //   8d4510               | lea                 eax, [ebp + 0x10]
            //   50                   | push                eax
            //   8d4568               | lea                 eax, [ebp + 0x68]
            //   50                   | push                eax

        $sequence_3 = { 53 8b5d0c 8bce 2bde 3b7d10 7d23 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   8bce                 | mov                 ecx, esi
            //   2bde                 | sub                 ebx, esi
            //   3b7d10               | cmp                 edi, dword ptr [ebp + 0x10]
            //   7d23                 | jge                 0x25

        $sequence_4 = { c645d543 c645d668 c645d765 c645d863 c645d96b c645da3a 885ddb }
            // n = 7, score = 100
            //   c645d543             | mov                 byte ptr [ebp - 0x2b], 0x43
            //   c645d668             | mov                 byte ptr [ebp - 0x2a], 0x68
            //   c645d765             | mov                 byte ptr [ebp - 0x29], 0x65
            //   c645d863             | mov                 byte ptr [ebp - 0x28], 0x63
            //   c645d96b             | mov                 byte ptr [ebp - 0x27], 0x6b
            //   c645da3a             | mov                 byte ptr [ebp - 0x26], 0x3a
            //   885ddb               | mov                 byte ptr [ebp - 0x25], bl

        $sequence_5 = { 8bec 8b4508 33c9 3bc1 7504 33c0 5d }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33c9                 | xor                 ecx, ecx
            //   3bc1                 | cmp                 eax, ecx
            //   7504                 | jne                 6
            //   33c0                 | xor                 eax, eax
            //   5d                   | pop                 ebp

        $sequence_6 = { ff15???????? 83f8ff 752b 8d45e8 50 c645e823 c645e92d }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   752b                 | jne                 0x2d
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   50                   | push                eax
            //   c645e823             | mov                 byte ptr [ebp - 0x18], 0x23
            //   c645e92d             | mov                 byte ptr [ebp - 0x17], 0x2d

        $sequence_7 = { 85c0 7524 a1???????? a3???????? a1???????? c705????????b2194100 8935???????? }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7524                 | jne                 0x26
            //   a1????????           |                     
            //   a3????????           |                     
            //   a1????????           |                     
            //   c705????????b2194100     |     
            //   8935????????         |                     

        $sequence_8 = { 0f84bf000000 56 53 50 e8???????? 56 }
            // n = 6, score = 100
            //   0f84bf000000         | je                  0xc5
            //   56                   | push                esi
            //   53                   | push                ebx
            //   50                   | push                eax
            //   e8????????           |                     
            //   56                   | push                esi

        $sequence_9 = { e8???????? 8d443001 59 895df4 3818 0f8430010000 50 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d443001             | lea                 eax, [eax + esi + 1]
            //   59                   | pop                 ecx
            //   895df4               | mov                 dword ptr [ebp - 0xc], ebx
            //   3818                 | cmp                 byte ptr [eax], bl
            //   0f8430010000         | je                  0x136
            //   50                   | push                eax

    condition:
        7 of them and filesize < 335872
}