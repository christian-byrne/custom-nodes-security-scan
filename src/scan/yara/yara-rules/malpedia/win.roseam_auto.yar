rule win_roseam_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.roseam."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.roseam"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 895514 eb38 895514 68???????? 68???????? 50 }
            // n = 6, score = 100
            //   895514               | mov                 dword ptr [ebp + 0x14], edx
            //   eb38                 | jmp                 0x3a
            //   895514               | mov                 dword ptr [ebp + 0x14], edx
            //   68????????           |                     
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_1 = { 8b8c2490000000 89442408 8d44240c 6a0a }
            // n = 4, score = 100
            //   8b8c2490000000       | mov                 ecx, dword ptr [esp + 0x90]
            //   89442408             | mov                 dword ptr [esp + 8], eax
            //   8d44240c             | lea                 eax, [esp + 0xc]
            //   6a0a                 | push                0xa

        $sequence_2 = { 8b12 66c745ec0200 8955f0 c745fc20000000 68???????? 50 9c }
            // n = 7, score = 100
            //   8b12                 | mov                 edx, dword ptr [edx]
            //   66c745ec0200         | mov                 word ptr [ebp - 0x14], 2
            //   8955f0               | mov                 dword ptr [ebp - 0x10], edx
            //   c745fc20000000       | mov                 dword ptr [ebp - 4], 0x20
            //   68????????           |                     
            //   50                   | push                eax
            //   9c                   | pushfd              

        $sequence_3 = { f2ae f7d1 49 894dec 8d0489 99 }
            // n = 6, score = 100
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   8d0489               | lea                 eax, [ecx + ecx*4]
            //   99                   | cdq                 

        $sequence_4 = { 81fbff000000 895de8 0f84e2010000 8b4df8 83f903 }
            // n = 5, score = 100
            //   81fbff000000         | cmp                 ebx, 0xff
            //   895de8               | mov                 dword ptr [ebp - 0x18], ebx
            //   0f84e2010000         | je                  0x1e8
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   83f903               | cmp                 ecx, 3

        $sequence_5 = { 57 b914000000 be???????? 8d7d90 f3a5 33d2 a4 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   b914000000           | mov                 ecx, 0x14
            //   be????????           |                     
            //   8d7d90               | lea                 edi, [ebp - 0x70]
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   33d2                 | xor                 edx, edx
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]

        $sequence_6 = { 58 68???????? ffd6 b91f000000 33c0 }
            // n = 5, score = 100
            //   58                   | pop                 eax
            //   68????????           |                     
            //   ffd6                 | call                esi
            //   b91f000000           | mov                 ecx, 0x1f
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 5d 58 8d8d58ffffff 8d95f4fcffff 51 }
            // n = 5, score = 100
            //   5d                   | pop                 ebp
            //   58                   | pop                 eax
            //   8d8d58ffffff         | lea                 ecx, [ebp - 0xa8]
            //   8d95f4fcffff         | lea                 edx, [ebp - 0x30c]
            //   51                   | push                ecx

        $sequence_8 = { 83c40c f3ab 66ab aa e8???????? 8985f4fcffff }
            // n = 6, score = 100
            //   83c40c               | add                 esp, 0xc
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   e8????????           |                     
            //   8985f4fcffff         | mov                 dword ptr [ebp - 0x30c], eax

        $sequence_9 = { 894df0 eb0d 33c9 894dec 894df0 }
            // n = 5, score = 100
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   eb0d                 | jmp                 0xf
            //   33c9                 | xor                 ecx, ecx
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx

    condition:
        7 of them and filesize < 221184
}