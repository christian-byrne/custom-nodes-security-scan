rule win_sobig_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.sobig."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sobig"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? ff35???????? 8d45dc 8bcf 6a00 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   ff35????????         |                     
            //   8d45dc               | lea                 eax, [ebp - 0x24]
            //   8bcf                 | mov                 ecx, edi
            //   6a00                 | push                0
            //   50                   | push                eax

        $sequence_1 = { 53 50 ff75ec ff75d8 ff75dc ff15???????? 85c0 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   50                   | push                eax
            //   ff75ec               | push                dword ptr [ebp - 0x14]
            //   ff75d8               | push                dword ptr [ebp - 0x28]
            //   ff75dc               | push                dword ptr [ebp - 0x24]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_2 = { 8a450f 33db 8d7e34 53 8bcf }
            // n = 5, score = 100
            //   8a450f               | mov                 al, byte ptr [ebp + 0xf]
            //   33db                 | xor                 ebx, ebx
            //   8d7e34               | lea                 edi, [esi + 0x34]
            //   53                   | push                ebx
            //   8bcf                 | mov                 ecx, edi

        $sequence_3 = { 5f 5e c20400 53 56 ff742410 8bf1 }
            // n = 7, score = 100
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c20400               | ret                 4
            //   53                   | push                ebx
            //   56                   | push                esi
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   8bf1                 | mov                 esi, ecx

        $sequence_4 = { e8???????? dd4598 8b4de8 dd5db0 dd45a0 dd5db8 dd45a8 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   dd4598               | fld                 qword ptr [ebp - 0x68]
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   dd5db0               | fstp                qword ptr [ebp - 0x50]
            //   dd45a0               | fld                 qword ptr [ebp - 0x60]
            //   dd5db8               | fstp                qword ptr [ebp - 0x48]
            //   dd45a8               | fld                 qword ptr [ebp - 0x58]

        $sequence_5 = { 8d45b4 50 56 56 68???????? 56 56 }
            // n = 7, score = 100
            //   8d45b4               | lea                 eax, [ebp - 0x4c]
            //   50                   | push                eax
            //   56                   | push                esi
            //   56                   | push                esi
            //   68????????           |                     
            //   56                   | push                esi
            //   56                   | push                esi

        $sequence_6 = { 8d4db0 e8???????? 8a45b0 83ec10 8bfc 8965e0 53 }
            // n = 7, score = 100
            //   8d4db0               | lea                 ecx, [ebp - 0x50]
            //   e8????????           |                     
            //   8a45b0               | mov                 al, byte ptr [ebp - 0x50]
            //   83ec10               | sub                 esp, 0x10
            //   8bfc                 | mov                 edi, esp
            //   8965e0               | mov                 dword ptr [ebp - 0x20], esp
            //   53                   | push                ebx

        $sequence_7 = { 8b4d08 68???????? e8???????? 6a01 58 8945ec e9???????? }
            // n = 7, score = 100
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   68????????           |                     
            //   e8????????           |                     
            //   6a01                 | push                1
            //   58                   | pop                 eax
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   e9????????           |                     

        $sequence_8 = { ff35???????? 8d45dc 8bcf 53 }
            // n = 4, score = 100
            //   ff35????????         |                     
            //   8d45dc               | lea                 eax, [ebp - 0x24]
            //   8bcf                 | mov                 ecx, edi
            //   53                   | push                ebx

        $sequence_9 = { ff7508 ff15???????? 85c0 7c43 ff7510 ff15???????? }
            // n = 6, score = 100
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7c43                 | jl                  0x45
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 262144
}