rule win_usbferry_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.usbferry."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.usbferry"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 8b45e0 50 ff15???????? 85c0 742c }
            // n = 6, score = 200
            //   52                   | push                edx
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   742c                 | je                  0x2e

        $sequence_1 = { 8b9598f5ffff 2b9588f5ffff 8b8588f5ffff 89857cf5ffff 899578f5ffff }
            // n = 5, score = 200
            //   8b9598f5ffff         | mov                 edx, dword ptr [ebp - 0xa68]
            //   2b9588f5ffff         | sub                 edx, dword ptr [ebp - 0xa78]
            //   8b8588f5ffff         | mov                 eax, dword ptr [ebp - 0xa78]
            //   89857cf5ffff         | mov                 dword ptr [ebp - 0xa84], eax
            //   899578f5ffff         | mov                 dword ptr [ebp - 0xa88], edx

        $sequence_2 = { e9???????? ff75e0 a1???????? ff5060 8d45e0 }
            // n = 5, score = 200
            //   e9????????           |                     
            //   ff75e0               | push                dword ptr [ebp - 0x20]
            //   a1????????           |                     
            //   ff5060               | call                dword ptr [eax + 0x60]
            //   8d45e0               | lea                 eax, [ebp - 0x20]

        $sequence_3 = { c3 3b0d???????? f27502 f2c3 f2e960030000 55 }
            // n = 6, score = 200
            //   c3                   | ret                 
            //   3b0d????????         |                     
            //   f27502               | bnd jne             5
            //   f2c3                 | bnd ret             
            //   f2e960030000         | bnd jmp             0x366
            //   55                   | push                ebp

        $sequence_4 = { 8b525c e8???????? 8b15???????? 8b4d84 ff7210 89425c }
            // n = 6, score = 200
            //   8b525c               | mov                 edx, dword ptr [edx + 0x5c]
            //   e8????????           |                     
            //   8b15????????         |                     
            //   8b4d84               | mov                 ecx, dword ptr [ebp - 0x7c]
            //   ff7210               | push                dword ptr [edx + 0x10]
            //   89425c               | mov                 dword ptr [edx + 0x5c], eax

        $sequence_5 = { 803f2e 7402 33ff 85ff 7407 8d45e9 }
            // n = 6, score = 200
            //   803f2e               | cmp                 byte ptr [edi], 0x2e
            //   7402                 | je                  4
            //   33ff                 | xor                 edi, edi
            //   85ff                 | test                edi, edi
            //   7407                 | je                  9
            //   8d45e9               | lea                 eax, [ebp - 0x17]

        $sequence_6 = { c645df6f c645e06e c645e100 c685a4f5ffff00 68ff030000 }
            // n = 5, score = 200
            //   c645df6f             | mov                 byte ptr [ebp - 0x21], 0x6f
            //   c645e06e             | mov                 byte ptr [ebp - 0x20], 0x6e
            //   c645e100             | mov                 byte ptr [ebp - 0x1f], 0
            //   c685a4f5ffff00       | mov                 byte ptr [ebp - 0xa5c], 0
            //   68ff030000           | push                0x3ff

        $sequence_7 = { 2b858cf5ffff 8b8d8cf5ffff 898d84f5ffff 898580f5ffff 8d95a8feffff 83c2ff }
            // n = 6, score = 200
            //   2b858cf5ffff         | sub                 eax, dword ptr [ebp - 0xa74]
            //   8b8d8cf5ffff         | mov                 ecx, dword ptr [ebp - 0xa74]
            //   898d84f5ffff         | mov                 dword ptr [ebp - 0xa7c], ecx
            //   898580f5ffff         | mov                 dword ptr [ebp - 0xa80], eax
            //   8d95a8feffff         | lea                 edx, [ebp - 0x158]
            //   83c2ff               | add                 edx, -1

        $sequence_8 = { 8b7d0c 33db 895ddc c745e000040000 895dfc 8d45dc }
            // n = 6, score = 200
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   33db                 | xor                 ebx, ebx
            //   895ddc               | mov                 dword ptr [ebp - 0x24], ebx
            //   c745e000040000       | mov                 dword ptr [ebp - 0x20], 0x400
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   8d45dc               | lea                 eax, [ebp - 0x24]

        $sequence_9 = { 89814c010000 8b09 e8???????? 8b0d???????? ff7110 8b9154010000 }
            // n = 6, score = 200
            //   89814c010000         | mov                 dword ptr [ecx + 0x14c], eax
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   e8????????           |                     
            //   8b0d????????         |                     
            //   ff7110               | push                dword ptr [ecx + 0x10]
            //   8b9154010000         | mov                 edx, dword ptr [ecx + 0x154]

        $sequence_10 = { ff7110 8b517c 894178 8b09 e8???????? 8b0d???????? }
            // n = 6, score = 200
            //   ff7110               | push                dword ptr [ecx + 0x10]
            //   8b517c               | mov                 edx, dword ptr [ecx + 0x7c]
            //   894178               | mov                 dword ptr [ecx + 0x78], eax
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   e8????????           |                     
            //   8b0d????????         |                     

        $sequence_11 = { 8a460e 8bcf 8845fb 8d45fb }
            // n = 4, score = 200
            //   8a460e               | mov                 al, byte ptr [esi + 0xe]
            //   8bcf                 | mov                 ecx, edi
            //   8845fb               | mov                 byte ptr [ebp - 5], al
            //   8d45fb               | lea                 eax, [ebp - 5]

        $sequence_12 = { 33c5 8945fc c685fcfffeff00 68ffff0000 }
            // n = 4, score = 200
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   c685fcfffeff00       | mov                 byte ptr [ebp - 0x10004], 0
            //   68ffff0000           | push                0xffff

        $sequence_13 = { 8885a0f5ffff 838590f5ffff01 80bda0f5ffff00 75e1 }
            // n = 4, score = 200
            //   8885a0f5ffff         | mov                 byte ptr [ebp - 0xa60], al
            //   838590f5ffff01       | add                 dword ptr [ebp - 0xa70], 1
            //   80bda0f5ffff00       | cmp                 byte ptr [ebp - 0xa60], 0
            //   75e1                 | jne                 0xffffffe3

        $sequence_14 = { 0f2805???????? 0f1145c8 6a00 0f2805???????? 0f1145d8 50 }
            // n = 6, score = 200
            //   0f2805????????       |                     
            //   0f1145c8             | movups              xmmword ptr [ebp - 0x38], xmm0
            //   6a00                 | push                0
            //   0f2805????????       |                     
            //   0f1145d8             | movups              xmmword ptr [ebp - 0x28], xmm0
            //   50                   | push                eax

        $sequence_15 = { 50 8d45f0 64a300000000 c745e000000000 c745fc00000000 837d2000 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   c745e000000000       | mov                 dword ptr [ebp - 0x20], 0
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   837d2000             | cmp                 dword ptr [ebp + 0x20], 0

    condition:
        7 of them and filesize < 638976
}