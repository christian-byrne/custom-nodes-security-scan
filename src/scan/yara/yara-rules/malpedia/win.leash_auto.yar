rule win_leash_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.leash."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.leash"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 83c408 85c0 7511 8b8b08080000 56 e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7511                 | jne                 0x13
            //   8b8b08080000         | mov                 ecx, dword ptr [ebx + 0x808]
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_1 = { 8a45ef 885def 3ac3 7404 c645ef01 }
            // n = 5, score = 200
            //   8a45ef               | mov                 al, byte ptr [ebp - 0x11]
            //   885def               | mov                 byte ptr [ebp - 0x11], bl
            //   3ac3                 | cmp                 al, bl
            //   7404                 | je                  6
            //   c645ef01             | mov                 byte ptr [ebp - 0x11], 1

        $sequence_2 = { 6a01 6a02 ff15???????? 83f8ff 89831c180000 7519 5f }
            // n = 7, score = 200
            //   6a01                 | push                1
            //   6a02                 | push                2
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   89831c180000         | mov                 dword ptr [ebx + 0x181c], eax
            //   7519                 | jne                 0x1b
            //   5f                   | pop                 edi

        $sequence_3 = { 33c0 f2ae f7d1 49 51 e8???????? 8be8 }
            // n = 7, score = 200
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   8be8                 | mov                 ebp, eax

        $sequence_4 = { 2bf9 8d93fe030000 8bc1 8bf7 8bfa 52 }
            // n = 6, score = 200
            //   2bf9                 | sub                 edi, ecx
            //   8d93fe030000         | lea                 edx, [ebx + 0x3fe]
            //   8bc1                 | mov                 eax, ecx
            //   8bf7                 | mov                 esi, edi
            //   8bfa                 | mov                 edi, edx
            //   52                   | push                edx

        $sequence_5 = { 8b5808 33c0 8a442413 33fb 33db }
            // n = 5, score = 200
            //   8b5808               | mov                 ebx, dword ptr [eax + 8]
            //   33c0                 | xor                 eax, eax
            //   8a442413             | mov                 al, byte ptr [esp + 0x13]
            //   33fb                 | xor                 edi, ebx
            //   33db                 | xor                 ebx, ebx

        $sequence_6 = { 8bc1 8bf7 8bfa 8d9510ffffff }
            // n = 4, score = 200
            //   8bc1                 | mov                 eax, ecx
            //   8bf7                 | mov                 esi, edi
            //   8bfa                 | mov                 edi, edx
            //   8d9510ffffff         | lea                 edx, [ebp - 0xf0]

        $sequence_7 = { 85ff c744242800000000 7e58 8bd8 895c2410 }
            // n = 5, score = 200
            //   85ff                 | test                edi, edi
            //   c744242800000000     | mov                 dword ptr [esp + 0x28], 0
            //   7e58                 | jle                 0x5a
            //   8bd8                 | mov                 ebx, eax
            //   895c2410             | mov                 dword ptr [esp + 0x10], ebx

        $sequence_8 = { 8bd1 8bf0 c1e902 f3a5 8bca 83c404 83e103 }
            // n = 7, score = 200
            //   8bd1                 | mov                 edx, ecx
            //   8bf0                 | mov                 esi, eax
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bca                 | mov                 ecx, edx
            //   83c404               | add                 esp, 4
            //   83e103               | and                 ecx, 3

        $sequence_9 = { 894518 8b4514 99 83e203 03c2 8b5518 }
            // n = 6, score = 200
            //   894518               | mov                 dword ptr [ebp + 0x18], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   99                   | cdq                 
            //   83e203               | and                 edx, 3
            //   03c2                 | add                 eax, edx
            //   8b5518               | mov                 edx, dword ptr [ebp + 0x18]

    condition:
        7 of them and filesize < 761856
}