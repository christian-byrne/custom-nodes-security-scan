rule win_industroyer2_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.industroyer2."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.industroyer2"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 732c 837df800 7426 8b45fc 8b4df4 8b1481 89559c }
            // n = 7, score = 100
            //   732c                 | jae                 0x2e
            //   837df800             | cmp                 dword ptr [ebp - 8], 0
            //   7426                 | je                  0x28
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b1481               | mov                 edx, dword ptr [ecx + eax*4]
            //   89559c               | mov                 dword ptr [ebp - 0x64], edx

        $sequence_1 = { 89480c 8b55fc 8b451c 894210 694d18a0860100 034d1c }
            // n = 6, score = 100
            //   89480c               | mov                 dword ptr [eax + 0xc], ecx
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b451c               | mov                 eax, dword ptr [ebp + 0x1c]
            //   894210               | mov                 dword ptr [edx + 0x10], eax
            //   694d18a0860100       | imul                ecx, dword ptr [ebp + 0x18], 0x186a0
            //   034d1c               | add                 ecx, dword ptr [ebp + 0x1c]

        $sequence_2 = { eb07 c745d000000000 8b4508 8a4dd0 888845000100 }
            // n = 5, score = 100
            //   eb07                 | jmp                 9
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8a4dd0               | mov                 cl, byte ptr [ebp - 0x30]
            //   888845000100         | mov                 byte ptr [eax + 0x10045], cl

        $sequence_3 = { 8b4d08 e8???????? 8945fc 68???????? 8b4508 50 }
            // n = 6, score = 100
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   68????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   50                   | push                eax

        $sequence_4 = { 885103 8b45fc 8b4804 8b551c 8b8238000100 894104 8b4dfc }
            // n = 7, score = 100
            //   885103               | mov                 byte ptr [ecx + 3], dl
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8b551c               | mov                 edx, dword ptr [ebp + 0x1c]
            //   8b8238000100         | mov                 eax, dword ptr [edx + 0x10038]
            //   894104               | mov                 dword ptr [ecx + 4], eax
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_5 = { c1e200 8b45fc 8b4d08 8a1411 885005 b801000000 d1e0 }
            // n = 7, score = 100
            //   c1e200               | shl                 edx, 0
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8a1411               | mov                 dl, byte ptr [ecx + edx]
            //   885005               | mov                 byte ptr [eax + 5], dl
            //   b801000000           | mov                 eax, 1
            //   d1e0                 | shl                 eax, 1

        $sequence_6 = { 8b4df0 51 ff15???????? 85c0 7406 c645ff01 eb04 }
            // n = 7, score = 100
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7406                 | je                  8
            //   c645ff01             | mov                 byte ptr [ebp - 1], 1
            //   eb04                 | jmp                 6

        $sequence_7 = { c6400c00 8b4dfc c641140a 6a04 8b55fc 83c210 52 }
            // n = 7, score = 100
            //   c6400c00             | mov                 byte ptr [eax + 0xc], 0
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   c641140a             | mov                 byte ptr [ecx + 0x14], 0xa
            //   6a04                 | push                4
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   83c210               | add                 edx, 0x10
            //   52                   | push                edx

        $sequence_8 = { 837df800 742c 8b55fc 8b45f4 8b0c90 898d78ffffff 8b9578ffffff }
            // n = 7, score = 100
            //   837df800             | cmp                 dword ptr [ebp - 8], 0
            //   742c                 | je                  0x2e
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   8b0c90               | mov                 ecx, dword ptr [eax + edx*4]
            //   898d78ffffff         | mov                 dword ptr [ebp - 0x88], ecx
            //   8b9578ffffff         | mov                 edx, dword ptr [ebp - 0x88]

        $sequence_9 = { 8b45fc 50 e8???????? 0fb6c8 85c9 7444 68???????? }
            // n = 7, score = 100
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax
            //   e8????????           |                     
            //   0fb6c8               | movzx               ecx, al
            //   85c9                 | test                ecx, ecx
            //   7444                 | je                  0x46
            //   68????????           |                     

    condition:
        7 of them and filesize < 100352
}