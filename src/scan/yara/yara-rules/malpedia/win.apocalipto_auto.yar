rule win_apocalipto_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.apocalipto."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.apocalipto"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 880e b967666666 89d8 f7e9 89d1 c1f902 }
            // n = 6, score = 100
            //   880e                 | mov                 byte ptr [esi], cl
            //   b967666666           | mov                 ecx, 0x66666667
            //   89d8                 | mov                 eax, ebx
            //   f7e9                 | imul                ecx
            //   89d1                 | mov                 ecx, edx
            //   c1f902               | sar                 ecx, 2

        $sequence_1 = { 8817 41 47 39f1 75f5 c6040800 5b }
            // n = 7, score = 100
            //   8817                 | mov                 byte ptr [edi], dl
            //   41                   | inc                 ecx
            //   47                   | inc                 edi
            //   39f1                 | cmp                 ecx, esi
            //   75f5                 | jne                 0xfffffff7
            //   c6040800             | mov                 byte ptr [eax + ecx], 0
            //   5b                   | pop                 ebx

        $sequence_2 = { c7042400000000 ff15???????? 52 8985ccf3ffff e8???????? 2500f0ffff 8d9800f0ffff }
            // n = 7, score = 100
            //   c7042400000000       | mov                 dword ptr [esp], 0
            //   ff15????????         |                     
            //   52                   | push                edx
            //   8985ccf3ffff         | mov                 dword ptr [ebp - 0xc34], eax
            //   e8????????           |                     
            //   2500f0ffff           | and                 eax, 0xfffff000
            //   8d9800f0ffff         | lea                 ebx, [eax - 0x1000]

        $sequence_3 = { 8b5584 29f2 89542404 893c24 e8???????? c745e400000000 }
            // n = 6, score = 100
            //   8b5584               | mov                 edx, dword ptr [ebp - 0x7c]
            //   29f2                 | sub                 edx, esi
            //   89542404             | mov                 dword ptr [esp + 4], edx
            //   893c24               | mov                 dword ptr [esp], edi
            //   e8????????           |                     
            //   c745e400000000       | mov                 dword ptr [ebp - 0x1c], 0

        $sequence_4 = { 8b4154 89442408 895c2404 893424 }
            // n = 4, score = 100
            //   8b4154               | mov                 eax, dword ptr [ecx + 0x54]
            //   89442408             | mov                 dword ptr [esp + 8], eax
            //   895c2404             | mov                 dword ptr [esp + 4], ebx
            //   893424               | mov                 dword ptr [esp], esi

        $sequence_5 = { 83ec2c 8b4d08 8b450c 85c0 0f849d000000 }
            // n = 5, score = 100
            //   83ec2c               | sub                 esp, 0x2c
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   85c0                 | test                eax, eax
            //   0f849d000000         | je                  0xa3

        $sequence_6 = { e8???????? 8d95e8f7ffff 89542404 893c24 e8???????? 89c2 85c0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d95e8f7ffff         | lea                 edx, [ebp - 0x818]
            //   89542404             | mov                 dword ptr [esp + 4], edx
            //   893c24               | mov                 dword ptr [esp], edi
            //   e8????????           |                     
            //   89c2                 | mov                 edx, eax
            //   85c0                 | test                eax, eax

        $sequence_7 = { 8d3c10 31c9 8a140b 8817 }
            // n = 4, score = 100
            //   8d3c10               | lea                 edi, [eax + edx]
            //   31c9                 | xor                 ecx, ecx
            //   8a140b               | mov                 dl, byte ptr [ebx + ecx]
            //   8817                 | mov                 byte ptr [edi], dl

        $sequence_8 = { 891c24 ff15???????? 83ec08 a3???????? 85c0 0f8497080000 }
            // n = 6, score = 100
            //   891c24               | mov                 dword ptr [esp], ebx
            //   ff15????????         |                     
            //   83ec08               | sub                 esp, 8
            //   a3????????           |                     
            //   85c0                 | test                eax, eax
            //   0f8497080000         | je                  0x89d

        $sequence_9 = { 0f84cb080000 c7442404???????? 891c24 ff15???????? 83ec08 a3???????? 85c0 }
            // n = 7, score = 100
            //   0f84cb080000         | je                  0x8d1
            //   c7442404????????     |                     
            //   891c24               | mov                 dword ptr [esp], ebx
            //   ff15????????         |                     
            //   83ec08               | sub                 esp, 8
            //   a3????????           |                     
            //   85c0                 | test                eax, eax

    condition:
        7 of them and filesize < 212992
}