rule win_recordbreaker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.recordbreaker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.recordbreaker"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 2bf7 8bcf d1fe 56 53 e8???????? }
            // n = 6, score = 700
            //   2bf7                 | sub                 esi, edi
            //   8bcf                 | mov                 ecx, edi
            //   d1fe                 | sar                 esi, 1
            //   56                   | push                esi
            //   53                   | push                ebx
            //   e8????????           |                     

        $sequence_1 = { 42 66890c38 8d0412 0fb70c30 663bcb }
            // n = 5, score = 700
            //   42                   | inc                 edx
            //   66890c38             | mov                 word ptr [eax + edi], cx
            //   8d0412               | lea                 eax, [edx + edx]
            //   0fb70c30             | movzx               ecx, word ptr [eax + esi]
            //   663bcb               | cmp                 cx, bx

        $sequence_2 = { 59 85c0 7408 6afe }
            // n = 4, score = 700
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   7408                 | je                  0xa
            //   6afe                 | push                -2

        $sequence_3 = { 6a02 ff75fc ff15???????? 6a03 ff75fc ff15???????? 6a04 }
            // n = 7, score = 700
            //   6a02                 | push                2
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff15????????         |                     
            //   6a03                 | push                3
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff15????????         |                     
            //   6a04                 | push                4

        $sequence_4 = { 8bd7 8bc8 e8???????? 8b15???????? 8bc8 e8???????? 8bd3 }
            // n = 7, score = 700
            //   8bd7                 | mov                 edx, edi
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8b15????????         |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8bd3                 | mov                 edx, ebx

        $sequence_5 = { 6a1a 53 6a00 8bf8 }
            // n = 4, score = 700
            //   6a1a                 | push                0x1a
            //   53                   | push                ebx
            //   6a00                 | push                0
            //   8bf8                 | mov                 edi, eax

        $sequence_6 = { 881e 46 49 83ea01 }
            // n = 4, score = 700
            //   881e                 | mov                 byte ptr [esi], bl
            //   46                   | inc                 esi
            //   49                   | dec                 ecx
            //   83ea01               | sub                 edx, 1

        $sequence_7 = { 8b15???????? 8bc8 e8???????? 8b55ec }
            // n = 4, score = 700
            //   8b15????????         |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]

        $sequence_8 = { 2bc6 d1f8 56 8d3c46 33c0 }
            // n = 5, score = 700
            //   2bc6                 | sub                 eax, esi
            //   d1f8                 | sar                 eax, 1
            //   56                   | push                esi
            //   8d3c46               | lea                 edi, [esi + eax*2]
            //   33c0                 | xor                 eax, eax

        $sequence_9 = { 8b4d0c 8b07 5f 5e }
            // n = 4, score = 700
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

    condition:
        7 of them and filesize < 232312
}