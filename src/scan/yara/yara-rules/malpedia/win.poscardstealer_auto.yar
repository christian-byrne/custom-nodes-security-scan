rule win_poscardstealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.poscardstealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.poscardstealer"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645fc01 e8???????? 8d4db8 51 50 8d55d4 }
            // n = 6, score = 200
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   e8????????           |                     
            //   8d4db8               | lea                 ecx, [ebp - 0x48]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   8d55d4               | lea                 edx, [ebp - 0x2c]

        $sequence_1 = { 33d2 bb07000000 895de8 8975e4 }
            // n = 4, score = 200
            //   33d2                 | xor                 edx, edx
            //   bb07000000           | mov                 ebx, 7
            //   895de8               | mov                 dword ptr [ebp - 0x18], ebx
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi

        $sequence_2 = { 50 ff15???????? 8bf0 8d45b0 50 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   8d45b0               | lea                 eax, [ebp - 0x50]
            //   50                   | push                eax

        $sequence_3 = { 03c8 83fb10 7303 8d55d4 }
            // n = 4, score = 200
            //   03c8                 | add                 ecx, eax
            //   83fb10               | cmp                 ebx, 0x10
            //   7303                 | jae                 5
            //   8d55d4               | lea                 edx, [ebp - 0x2c]

        $sequence_4 = { 8bd1 c1fa05 c1e006 030495e0794200 eb05 b8???????? f6400420 }
            // n = 7, score = 200
            //   8bd1                 | mov                 edx, ecx
            //   c1fa05               | sar                 edx, 5
            //   c1e006               | shl                 eax, 6
            //   030495e0794200       | add                 eax, dword ptr [edx*4 + 0x4279e0]
            //   eb05                 | jmp                 7
            //   b8????????           |                     
            //   f6400420             | test                byte ptr [eax + 4], 0x20

        $sequence_5 = { c785e8feffff7ce74100 8b8520ffffff c645fc07 894598 }
            // n = 4, score = 200
            //   c785e8feffff7ce74100     | mov    dword ptr [ebp - 0x118], 0x41e77c
            //   8b8520ffffff         | mov                 eax, dword ptr [ebp - 0xe0]
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7
            //   894598               | mov                 dword ptr [ebp - 0x68], eax

        $sequence_6 = { 8b4da4 8b5590 8bc2 83f908 7303 }
            // n = 5, score = 200
            //   8b4da4               | mov                 ecx, dword ptr [ebp - 0x5c]
            //   8b5590               | mov                 edx, dword ptr [ebp - 0x70]
            //   8bc2                 | mov                 eax, edx
            //   83f908               | cmp                 ecx, 8
            //   7303                 | jae                 5

        $sequence_7 = { 885dd4 e8???????? 8b0d???????? 8b35???????? 2bce b893244992 f7e9 }
            // n = 7, score = 200
            //   885dd4               | mov                 byte ptr [ebp - 0x2c], bl
            //   e8????????           |                     
            //   8b0d????????         |                     
            //   8b35????????         |                     
            //   2bce                 | sub                 ecx, esi
            //   b893244992           | mov                 eax, 0x92492493
            //   f7e9                 | imul                ecx

        $sequence_8 = { 6800000040 50 ff15???????? 8bf0 8d45c4 50 }
            // n = 6, score = 200
            //   6800000040           | push                0x40000000
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   8d45c4               | lea                 eax, [ebp - 0x3c]
            //   50                   | push                eax

        $sequence_9 = { e9???????? 8d8d58feffff e9???????? 8d8d10ffffff e9???????? 8d8d48ffffff e9???????? }
            // n = 7, score = 200
            //   e9????????           |                     
            //   8d8d58feffff         | lea                 ecx, [ebp - 0x1a8]
            //   e9????????           |                     
            //   8d8d10ffffff         | lea                 ecx, [ebp - 0xf0]
            //   e9????????           |                     
            //   8d8d48ffffff         | lea                 ecx, [ebp - 0xb8]
            //   e9????????           |                     

    condition:
        7 of them and filesize < 362496
}