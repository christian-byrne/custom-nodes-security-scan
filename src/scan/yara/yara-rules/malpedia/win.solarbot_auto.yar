rule win_solarbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.solarbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.solarbot"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f8407feffff bb01000000 4b 90 43 8b854cfeffff }
            // n = 6, score = 300
            //   0f8407feffff         | je                  0xfffffe0d
            //   bb01000000           | mov                 ebx, 1
            //   4b                   | dec                 ebx
            //   90                   | nop                 
            //   43                   | inc                 ebx
            //   8b854cfeffff         | mov                 eax, dword ptr [ebp - 0x1b4]

        $sequence_1 = { 50 8d8500fcffff 50 6a00 }
            // n = 4, score = 300
            //   50                   | push                eax
            //   8d8500fcffff         | lea                 eax, [ebp - 0x400]
            //   50                   | push                eax
            //   6a00                 | push                0

        $sequence_2 = { 85db 7463 ff75f8 e8???????? 84c0 7457 }
            // n = 6, score = 300
            //   85db                 | test                ebx, ebx
            //   7463                 | je                  0x65
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7457                 | je                  0x59

        $sequence_3 = { 8d85f4fdffff 50 e8???????? 6a0c 8d85e8fdffff 50 e8???????? }
            // n = 7, score = 300
            //   8d85f4fdffff         | lea                 eax, [ebp - 0x20c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   6a0c                 | push                0xc
            //   8d85e8fdffff         | lea                 eax, [ebp - 0x218]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_4 = { 50 e8???????? 680c010000 8d85f4faffff }
            // n = 4, score = 300
            //   50                   | push                eax
            //   e8????????           |                     
            //   680c010000           | push                0x10c
            //   8d85f4faffff         | lea                 eax, [ebp - 0x50c]

        $sequence_5 = { 8b4508 8945cc 8b7d0c 8b4510 }
            // n = 4, score = 300
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]

        $sequence_6 = { 53 e8???????? 83fe0c 7509 ff75f0 }
            // n = 5, score = 300
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83fe0c               | cmp                 esi, 0xc
            //   7509                 | jne                 0xb
            //   ff75f0               | push                dword ptr [ebp - 0x10]

        $sequence_7 = { 85c0 0f847d000000 ff75f4 e8???????? }
            // n = 4, score = 300
            //   85c0                 | test                eax, eax
            //   0f847d000000         | je                  0x83
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   e8????????           |                     

        $sequence_8 = { c645c401 eb23 6a00 6a00 6a00 }
            // n = 5, score = 300
            //   c645c401             | mov                 byte ptr [ebp - 0x3c], 1
            //   eb23                 | jmp                 0x25
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_9 = { 83c040 8985e4fdffff 8b85e0fdffff 0385d0fdffff 8b583c 83bdccfdffff0c }
            // n = 6, score = 300
            //   83c040               | add                 eax, 0x40
            //   8985e4fdffff         | mov                 dword ptr [ebp - 0x21c], eax
            //   8b85e0fdffff         | mov                 eax, dword ptr [ebp - 0x220]
            //   0385d0fdffff         | add                 eax, dword ptr [ebp - 0x230]
            //   8b583c               | mov                 ebx, dword ptr [eax + 0x3c]
            //   83bdccfdffff0c       | cmp                 dword ptr [ebp - 0x234], 0xc

    condition:
        7 of them and filesize < 204800
}