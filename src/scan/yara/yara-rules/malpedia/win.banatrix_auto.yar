rule win_banatrix_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.banatrix."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.banatrix"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83ec10 894208 89f7 31c0 f3aa }
            // n = 5, score = 200
            //   83ec10               | sub                 esp, 0x10
            //   894208               | mov                 dword ptr [edx + 8], eax
            //   89f7                 | mov                 edi, esi
            //   31c0                 | xor                 eax, eax
            //   f3aa                 | rep stosb           byte ptr es:[edi], al

        $sequence_1 = { e8???????? 8b4304 85c0 741b c744240800800000 c744240400000000 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   85c0                 | test                eax, eax
            //   741b                 | je                  0x1d
            //   c744240800800000     | mov                 dword ptr [esp + 8], 0x8000
            //   c744240400000000     | mov                 dword ptr [esp + 4], 0

        $sequence_2 = { c744240806000000 893c24 c1e804 40 0fb7c0 }
            // n = 5, score = 200
            //   c744240806000000     | mov                 dword ptr [esp + 8], 6
            //   893c24               | mov                 dword ptr [esp], edi
            //   c1e804               | shr                 eax, 4
            //   40                   | inc                 eax
            //   0fb7c0               | movzx               eax, ax

        $sequence_3 = { 8b5320 0345d0 89542404 890424 }
            // n = 4, score = 200
            //   8b5320               | mov                 edx, dword ptr [ebx + 0x20]
            //   0345d0               | add                 eax, dword ptr [ebp - 0x30]
            //   89542404             | mov                 dword ptr [esp + 4], edx
            //   890424               | mov                 dword ptr [esp], eax

        $sequence_4 = { e9???????? e8???????? c744240824000000 c744240400000000 }
            // n = 4, score = 200
            //   e9????????           |                     
            //   e8????????           |                     
            //   c744240824000000     | mov                 dword ptr [esp + 8], 0x24
            //   c744240400000000     | mov                 dword ptr [esp + 4], 0

        $sequence_5 = { 51 c9 c3 55 89e5 57 }
            // n = 6, score = 200
            //   51                   | push                ecx
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   57                   | push                edi

        $sequence_6 = { 83ec10 85c0 8945d4 7542 8b45d0 c744240c04000000 c744240800300000 }
            // n = 7, score = 200
            //   83ec10               | sub                 esp, 0x10
            //   85c0                 | test                eax, eax
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   7542                 | jne                 0x44
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   c744240c04000000     | mov                 dword ptr [esp + 0xc], 4
            //   c744240800300000     | mov                 dword ptr [esp + 8], 0x3000

        $sequence_7 = { 8b75d0 8b7dd4 2b7e34 897dcc 7514 8b7304 }
            // n = 6, score = 200
            //   8b75d0               | mov                 esi, dword ptr [ebp - 0x30]
            //   8b7dd4               | mov                 edi, dword ptr [ebp - 0x2c]
            //   2b7e34               | sub                 edi, dword ptr [esi + 0x34]
            //   897dcc               | mov                 dword ptr [ebp - 0x34], edi
            //   7514                 | jne                 0x16
            //   8b7304               | mov                 esi, dword ptr [ebx + 4]

        $sequence_8 = { 83787c00 7511 c704247f000000 e8???????? 31c0 51 eb66 }
            // n = 7, score = 200
            //   83787c00             | cmp                 dword ptr [eax + 0x7c], 0
            //   7511                 | jne                 0x13
            //   c704247f000000       | mov                 dword ptr [esp], 0x7f
            //   e8????????           |                     
            //   31c0                 | xor                 eax, eax
            //   51                   | push                ecx
            //   eb66                 | jmp                 0x68

        $sequence_9 = { 85c0 56 56 7416 8b03 c745d000000000 }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   56                   | push                esi
            //   56                   | push                esi
            //   7416                 | je                  0x18
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0

    condition:
        7 of them and filesize < 180224
}