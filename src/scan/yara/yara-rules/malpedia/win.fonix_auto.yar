rule win_fonix_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.fonix."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fonix"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 8d5508 c645fc0e 8d8df4fbffff e8???????? 51 51 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d5508               | lea                 edx, [ebp + 8]
            //   c645fc0e             | mov                 byte ptr [ebp - 4], 0xe
            //   8d8df4fbffff         | lea                 ecx, [ebp - 0x40c]
            //   e8????????           |                     
            //   51                   | push                ecx
            //   51                   | push                ecx

        $sequence_1 = { 83c408 85ff 0f8533ffffff 0f1045a8 8bb56cffffff 0f114590 f30f7e45b8 }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   85ff                 | test                edi, edi
            //   0f8533ffffff         | jne                 0xffffff39
            //   0f1045a8             | movups              xmm0, xmmword ptr [ebp - 0x58]
            //   8bb56cffffff         | mov                 esi, dword ptr [ebp - 0x94]
            //   0f114590             | movups              xmmword ptr [ebp - 0x70], xmm0
            //   f30f7e45b8           | movq                xmm0, qword ptr [ebp - 0x48]

        $sequence_2 = { c1c107 894c2434 8b4c2428 03ca 33f1 c1c610 03c6 }
            // n = 7, score = 100
            //   c1c107               | rol                 ecx, 7
            //   894c2434             | mov                 dword ptr [esp + 0x34], ecx
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   03ca                 | add                 ecx, edx
            //   33f1                 | xor                 esi, ecx
            //   c1c610               | rol                 esi, 0x10
            //   03c6                 | add                 eax, esi

        $sequence_3 = { 8b7d74 8d4500 57 50 ff7578 8d4530 c645fc0a }
            // n = 7, score = 100
            //   8b7d74               | mov                 edi, dword ptr [ebp + 0x74]
            //   8d4500               | lea                 eax, [ebp]
            //   57                   | push                edi
            //   50                   | push                eax
            //   ff7578               | push                dword ptr [ebp + 0x78]
            //   8d4530               | lea                 eax, [ebp + 0x30]
            //   c645fc0a             | mov                 byte ptr [ebp - 4], 0xa

        $sequence_4 = { c645fc1e e8???????? c645fc1f 68???????? 8d8d68fdffff e8???????? 68???????? }
            // n = 7, score = 100
            //   c645fc1e             | mov                 byte ptr [ebp - 4], 0x1e
            //   e8????????           |                     
            //   c645fc1f             | mov                 byte ptr [ebp - 4], 0x1f
            //   68????????           |                     
            //   8d8d68fdffff         | lea                 ecx, [ebp - 0x298]
            //   e8????????           |                     
            //   68????????           |                     

        $sequence_5 = { e8???????? bf6e060000 c645fc0a 57 e8???????? 59 8bf0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   bf6e060000           | mov                 edi, 0x66e
            //   c645fc0a             | mov                 byte ptr [ebp - 4], 0xa
            //   57                   | push                edi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8bf0                 | mov                 esi, eax

        $sequence_6 = { 8bf0 ff5208 0faff0 8d4b0c 56 e8???????? }
            // n = 6, score = 100
            //   8bf0                 | mov                 esi, eax
            //   ff5208               | call                dword ptr [edx + 8]
            //   0faff0               | imul                esi, eax
            //   8d4b0c               | lea                 ecx, [ebx + 0xc]
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_7 = { 8d8d0cfcffff e8???????? 83ec18 8d4508 }
            // n = 4, score = 100
            //   8d8d0cfcffff         | lea                 ecx, [ebp - 0x3f4]
            //   e8????????           |                     
            //   83ec18               | sub                 esp, 0x18
            //   8d4508               | lea                 eax, [ebp + 8]

        $sequence_8 = { 8d4101 898d7cffffff 50 8d4dd8 e8???????? 8bd0 8b856cffffff }
            // n = 7, score = 100
            //   8d4101               | lea                 eax, [ecx + 1]
            //   898d7cffffff         | mov                 dword ptr [ebp - 0x84], ecx
            //   50                   | push                eax
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   8bd0                 | mov                 edx, eax
            //   8b856cffffff         | mov                 eax, dword ptr [ebp - 0x94]

        $sequence_9 = { 50 56 e8???????? 83c40c 84c0 7404 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   84c0                 | test                al, al
            //   7404                 | je                  6

    condition:
        7 of them and filesize < 2226176
}