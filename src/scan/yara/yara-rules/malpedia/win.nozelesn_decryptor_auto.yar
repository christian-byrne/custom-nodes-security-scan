rule win_nozelesn_decryptor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.nozelesn_decryptor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nozelesn_decryptor"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b459c 8d4dd8 51 8b00 8b701c 8bce e8???????? }
            // n = 7, score = 100
            //   8b459c               | mov                 eax, dword ptr [ebp - 0x64]
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   51                   | push                ecx
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b701c               | mov                 esi, dword ptr [eax + 0x1c]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_1 = { c7401000000000 c7401407000000 668908 c645fc06 8bb5ccfbffff 85f6 0f848d100000 }
            // n = 7, score = 100
            //   c7401000000000       | mov                 dword ptr [eax + 0x10], 0
            //   c7401407000000       | mov                 dword ptr [eax + 0x14], 7
            //   668908               | mov                 word ptr [eax], cx
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6
            //   8bb5ccfbffff         | mov                 esi, dword ptr [ebp - 0x434]
            //   85f6                 | test                esi, esi
            //   0f848d100000         | je                  0x1093

        $sequence_2 = { 8bc1 83e801 747b 83e801 7466 2d0f010000 7416 }
            // n = 7, score = 100
            //   8bc1                 | mov                 eax, ecx
            //   83e801               | sub                 eax, 1
            //   747b                 | je                  0x7d
            //   83e801               | sub                 eax, 1
            //   7466                 | je                  0x68
            //   2d0f010000           | sub                 eax, 0x10f
            //   7416                 | je                  0x18

        $sequence_3 = { 3bcf 7c10 7f07 3d???????? 7607 bf???????? eb02 }
            // n = 7, score = 100
            //   3bcf                 | cmp                 ecx, edi
            //   7c10                 | jl                  0x12
            //   7f07                 | jg                  9
            //   3d????????           |                     
            //   7607                 | jbe                 9
            //   bf????????           |                     
            //   eb02                 | jmp                 4

        $sequence_4 = { 743f 8b7b0c eb28 8b4608 }
            // n = 4, score = 100
            //   743f                 | je                  0x41
            //   8b7b0c               | mov                 edi, dword ptr [ebx + 0xc]
            //   eb28                 | jmp                 0x2a
            //   8b4608               | mov                 eax, dword ptr [esi + 8]

        $sequence_5 = { 8b5508 85d2 7436 8bc2 8945fc 83fa04 721f }
            // n = 7, score = 100
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   85d2                 | test                edx, edx
            //   7436                 | je                  0x38
            //   8bc2                 | mov                 eax, edx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   83fa04               | cmp                 edx, 4
            //   721f                 | jb                  0x21

        $sequence_6 = { ff7730 c745fc01000000 8945a0 c645ac00 c645ad00 e8???????? 8d4584 }
            // n = 7, score = 100
            //   ff7730               | push                dword ptr [edi + 0x30]
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   8945a0               | mov                 dword ptr [ebp - 0x60], eax
            //   c645ac00             | mov                 byte ptr [ebp - 0x54], 0
            //   c645ad00             | mov                 byte ptr [ebp - 0x53], 0
            //   e8????????           |                     
            //   8d4584               | lea                 eax, [ebp - 0x7c]

        $sequence_7 = { e8???????? 837b3800 884340 7510 8b430c 8bcb 83c804 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   837b3800             | cmp                 dword ptr [ebx + 0x38], 0
            //   884340               | mov                 byte ptr [ebx + 0x40], al
            //   7510                 | jne                 0x12
            //   8b430c               | mov                 eax, dword ptr [ebx + 0xc]
            //   8bcb                 | mov                 ecx, ebx
            //   83c804               | or                  eax, 4

        $sequence_8 = { 33d7 8945e8 33d6 8bf0 c1c20d 33f1 8bc2 }
            // n = 7, score = 100
            //   33d7                 | xor                 edx, edi
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   33d6                 | xor                 edx, esi
            //   8bf0                 | mov                 esi, eax
            //   c1c20d               | rol                 edx, 0xd
            //   33f1                 | xor                 esi, ecx
            //   8bc2                 | mov                 eax, edx

        $sequence_9 = { 7428 8b03 8d4d90 51 8b7018 8bce e8???????? }
            // n = 7, score = 100
            //   7428                 | je                  0x2a
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8d4d90               | lea                 ecx, [ebp - 0x70]
            //   51                   | push                ecx
            //   8b7018               | mov                 esi, dword ptr [eax + 0x18]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

    condition:
        7 of them and filesize < 1122304
}