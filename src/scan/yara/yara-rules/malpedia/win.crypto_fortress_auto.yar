rule win_crypto_fortress_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.crypto_fortress."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crypto_fortress"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffb5a8feffff e8???????? 68???????? ffb5a8feffff e8???????? }
            // n = 5, score = 100
            //   ffb5a8feffff         | push                dword ptr [ebp - 0x158]
            //   e8????????           |                     
            //   68????????           |                     
            //   ffb5a8feffff         | push                dword ptr [ebp - 0x158]
            //   e8????????           |                     

        $sequence_1 = { a3???????? 68???????? ff35???????? e8???????? 85c0 0f846f030000 }
            // n = 6, score = 100
            //   a3????????           |                     
            //   68????????           |                     
            //   ff35????????         |                     
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f846f030000         | je                  0x375

        $sequence_2 = { aa 3407 aa 045a aa }
            // n = 5, score = 100
            //   aa                   | stosb               byte ptr es:[edi], al
            //   3407                 | xor                 al, 7
            //   aa                   | stosb               byte ptr es:[edi], al
            //   045a                 | add                 al, 0x5a
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_3 = { e8???????? 85c0 0f846f030000 a3???????? 68???????? ff35???????? e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f846f030000         | je                  0x375
            //   a3????????           |                     
            //   68????????           |                     
            //   ff35????????         |                     
            //   e8????????           |                     

        $sequence_4 = { ff35???????? e8???????? 85c0 0f8456060000 a3???????? 8d3dccec4000 33c0 }
            // n = 7, score = 100
            //   ff35????????         |                     
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f8456060000         | je                  0x65c
            //   a3????????           |                     
            //   8d3dccec4000         | lea                 edi, [0x40eccc]
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 2cff aa 2cf9 aa 2c4c }
            // n = 5, score = 100
            //   2cff                 | sub                 al, 0xff
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2cf9                 | sub                 al, 0xf9
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2c4c                 | sub                 al, 0x4c

        $sequence_6 = { aa 2c4e aa 0444 aa 2cff aa }
            // n = 7, score = 100
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2c4e                 | sub                 al, 0x4e
            //   aa                   | stosb               byte ptr es:[edi], al
            //   0444                 | add                 al, 0x44
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2cff                 | sub                 al, 0xff
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_7 = { c9 c20800 55 8bec 83c4f8 8b4508 }
            // n = 6, score = 100
            //   c9                   | leave               
            //   c20800               | ret                 8
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83c4f8               | add                 esp, -8
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_8 = { aa 341b aa 2c27 aa 3441 aa }
            // n = 7, score = 100
            //   aa                   | stosb               byte ptr es:[edi], al
            //   341b                 | xor                 al, 0x1b
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2c27                 | sub                 al, 0x27
            //   aa                   | stosb               byte ptr es:[edi], al
            //   3441                 | xor                 al, 0x41
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_9 = { aa 340a aa 3421 aa 0433 aa }
            // n = 7, score = 100
            //   aa                   | stosb               byte ptr es:[edi], al
            //   340a                 | xor                 al, 0xa
            //   aa                   | stosb               byte ptr es:[edi], al
            //   3421                 | xor                 al, 0x21
            //   aa                   | stosb               byte ptr es:[edi], al
            //   0433                 | add                 al, 0x33
            //   aa                   | stosb               byte ptr es:[edi], al

    condition:
        7 of them and filesize < 188416
}