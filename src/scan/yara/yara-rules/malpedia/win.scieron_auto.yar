rule win_scieron_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.scieron."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.scieron"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc6 ff75f8 e8???????? 59 59 }
            // n = 5, score = 100
            //   8bc6                 | mov                 eax, esi
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

        $sequence_1 = { 57 ff7508 8d859cf9ffff 68???????? }
            // n = 4, score = 100
            //   57                   | push                edi
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d859cf9ffff         | lea                 eax, [ebp - 0x664]
            //   68????????           |                     

        $sequence_2 = { 68???????? ff15???????? 50 ffd3 ffd0 807d0c02 742a }
            // n = 7, score = 100
            //   68????????           |                     
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   ffd0                 | call                eax
            //   807d0c02             | cmp                 byte ptr [ebp + 0xc], 2
            //   742a                 | je                  0x2c

        $sequence_3 = { 8bec 83e4f8 b81c800000 e8???????? 53 }
            // n = 5, score = 100
            //   8bec                 | mov                 ebp, esp
            //   83e4f8               | and                 esp, 0xfffffff8
            //   b81c800000           | mov                 eax, 0x801c
            //   e8????????           |                     
            //   53                   | push                ebx

        $sequence_4 = { 897574 ff15???????? 8d4574 50 56 56 }
            // n = 6, score = 100
            //   897574               | mov                 dword ptr [ebp + 0x74], esi
            //   ff15????????         |                     
            //   8d4574               | lea                 eax, [ebp + 0x74]
            //   50                   | push                eax
            //   56                   | push                esi
            //   56                   | push                esi

        $sequence_5 = { eb65 8b4734 50 894574 8d472c 50 }
            // n = 6, score = 100
            //   eb65                 | jmp                 0x67
            //   8b4734               | mov                 eax, dword ptr [edi + 0x34]
            //   50                   | push                eax
            //   894574               | mov                 dword ptr [ebp + 0x74], eax
            //   8d472c               | lea                 eax, [edi + 0x2c]
            //   50                   | push                eax

        $sequence_6 = { 8bf8 85ff 7418 8d45fc }
            // n = 4, score = 100
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   7418                 | je                  0x1a
            //   8d45fc               | lea                 eax, [ebp - 4]

        $sequence_7 = { 40 40 663938 75df }
            // n = 4, score = 100
            //   40                   | inc                 eax
            //   40                   | inc                 eax
            //   663938               | cmp                 word ptr [eax], di
            //   75df                 | jne                 0xffffffe1

        $sequence_8 = { 033e 68???????? 68???????? ff15???????? }
            // n = 4, score = 100
            //   033e                 | add                 edi, dword ptr [esi]
            //   68????????           |                     
            //   68????????           |                     
            //   ff15????????         |                     

        $sequence_9 = { 83a61c02000000 33c0 40 5f 5d }
            // n = 5, score = 100
            //   83a61c02000000       | and                 dword ptr [esi + 0x21c], 0
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   5f                   | pop                 edi
            //   5d                   | pop                 ebp

    condition:
        7 of them and filesize < 100352
}