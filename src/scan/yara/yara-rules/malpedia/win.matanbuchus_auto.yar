rule win_matanbuchus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.matanbuchus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.matanbuchus"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 038c0534fdffff 51 e8???????? ebb4 8b55fc 52 e8???????? }
            // n = 7, score = 400
            //   038c0534fdffff       | add                 ecx, dword ptr [ebp + eax - 0x2cc]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   ebb4                 | jmp                 0xffffffb6
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_1 = { 6a0c 6a0c 68???????? e8???????? }
            // n = 4, score = 400
            //   6a0c                 | push                0xc
            //   6a0c                 | push                0xc
            //   68????????           |                     
            //   e8????????           |                     

        $sequence_2 = { 8b4dfc 038c0534fdffff 51 e8???????? }
            // n = 4, score = 400
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   038c0534fdffff       | add                 ecx, dword ptr [ebp + eax - 0x2cc]
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_3 = { 8b4df8 8b513c 035508 8955f4 }
            // n = 4, score = 400
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   8b513c               | mov                 edx, dword ptr [ecx + 0x3c]
            //   035508               | add                 edx, dword ptr [ebp + 8]
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx

        $sequence_4 = { 6bc200 8b4d08 0fbe1401 33550c }
            // n = 4, score = 400
            //   6bc200               | imul                eax, edx, 0
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   0fbe1401             | movsx               edx, byte ptr [ecx + eax]
            //   33550c               | xor                 edx, dword ptr [ebp + 0xc]

        $sequence_5 = { 68f8000000 8d95b8feffff 52 8b45fc 0345ec 50 e8???????? }
            // n = 7, score = 400
            //   68f8000000           | push                0xf8
            //   8d95b8feffff         | lea                 edx, [ebp - 0x148]
            //   52                   | push                edx
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   0345ec               | add                 eax, dword ptr [ebp - 0x14]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { 8b45f4 c1e818 3345f4 8945f4 694df495e9d15b 894df4 }
            // n = 6, score = 400
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   c1e818               | shr                 eax, 0x18
            //   3345f4               | xor                 eax, dword ptr [ebp - 0xc]
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   694df495e9d15b       | imul                ecx, dword ptr [ebp - 0xc], 0x5bd1e995
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx

        $sequence_7 = { 51 8b55f0 52 6b45f828 8b4dfc 038c0534fdffff }
            // n = 6, score = 400
            //   51                   | push                ecx
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   52                   | push                edx
            //   6b45f828             | imul                eax, dword ptr [ebp - 8], 0x28
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   038c0534fdffff       | add                 ecx, dword ptr [ebp + eax - 0x2cc]

        $sequence_8 = { eb44 b901000000 d1e1 8b55ec }
            // n = 4, score = 400
            //   eb44                 | jmp                 0x46
            //   b901000000           | mov                 ecx, 1
            //   d1e1                 | shl                 ecx, 1
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]

        $sequence_9 = { 8b55ec 813a50450000 7407 33c0 e9???????? }
            // n = 5, score = 400
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]
            //   813a50450000         | cmp                 dword ptr [edx], 0x4550
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     

    condition:
        7 of them and filesize < 2056192
}