rule win_unidentified_044_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-12-06"
        version = "1"
        description = "Detects win.unidentified_044."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_044"
        malpedia_rule_date = "20231130"
        malpedia_hash = "fc8a0e9f343f6d6ded9e7df1a64dac0cc68d7351"
        malpedia_version = "20230808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bca 8bd8 e8???????? 83c404 84c0 7409 668b542408 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   8bd8                 | mov                 ebx, eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   84c0                 | test                al, al
            //   7409                 | je                  0xb
            //   668b542408           | mov                 dx, word ptr [esp + 8]

        $sequence_1 = { 3bcf 7416 8d9b00000000 80792400 7403 }
            // n = 5, score = 100
            //   3bcf                 | cmp                 ecx, edi
            //   7416                 | je                  0x18
            //   8d9b00000000         | lea                 ebx, [ebx]
            //   80792400             | cmp                 byte ptr [ecx + 0x24], 0
            //   7403                 | je                  5

        $sequence_2 = { c3 8b8424e4020000 6a10 6a00 50 }
            // n = 5, score = 100
            //   c3                   | ret                 
            //   8b8424e4020000       | mov                 eax, dword ptr [esp + 0x2e4]
            //   6a10                 | push                0x10
            //   6a00                 | push                0
            //   50                   | push                eax

        $sequence_3 = { 74b3 33ff 397c2418 76ab 33c0 }
            // n = 5, score = 100
            //   74b3                 | je                  0xffffffb5
            //   33ff                 | xor                 edi, edi
            //   397c2418             | cmp                 dword ptr [esp + 0x18], edi
            //   76ab                 | jbe                 0xffffffad
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { ff15???????? 3d1e270000 7552 8b442408 85c0 }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   3d1e270000           | cmp                 eax, 0x271e
            //   7552                 | jne                 0x54
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   85c0                 | test                eax, eax

        $sequence_5 = { 2bf0 03d8 85f6 7fe2 }
            // n = 4, score = 100
            //   2bf0                 | sub                 esi, eax
            //   03d8                 | add                 ebx, eax
            //   85f6                 | test                esi, esi
            //   7fe2                 | jg                  0xffffffe4

        $sequence_6 = { 803e00 8be8 743f 53 57 }
            // n = 5, score = 100
            //   803e00               | cmp                 byte ptr [esi], 0
            //   8be8                 | mov                 ebp, eax
            //   743f                 | je                  0x41
            //   53                   | push                ebx
            //   57                   | push                edi

        $sequence_7 = { ffd5 8bb42464050000 85c0 7f85 7c24 f644242420 0f8468feffff }
            // n = 7, score = 100
            //   ffd5                 | call                ebp
            //   8bb42464050000       | mov                 esi, dword ptr [esp + 0x564]
            //   85c0                 | test                eax, eax
            //   7f85                 | jg                  0xffffff87
            //   7c24                 | jl                  0x26
            //   f644242420           | test                byte ptr [esp + 0x24], 0x20
            //   0f8468feffff         | je                  0xfffffe6e

        $sequence_8 = { c7460403000000 ffd3 5b 5f 32c0 5e }
            // n = 6, score = 100
            //   c7460403000000       | mov                 dword ptr [esi + 4], 3
            //   ffd3                 | call                ebx
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi
            //   32c0                 | xor                 al, al
            //   5e                   | pop                 esi

        $sequence_9 = { 55 e8???????? 83c40c 84c0 74a0 8a442413 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   84c0                 | test                al, al
            //   74a0                 | je                  0xffffffa2
            //   8a442413             | mov                 al, byte ptr [esp + 0x13]

    condition:
        7 of them and filesize < 90112
}